#pragma once
#include "common.h"
// clang-format off
static inline void gen_imu_rot_f(FLT* out, const FLT time, const FLT* imu_rot) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT x0 = time * time;
	const GEN_FLT x1 = x0 * (aa_z * aa_z);
	const GEN_FLT x2 = x0 * (aa_y * aa_y);
	const GEN_FLT x3 = x0 * (aa_x * aa_x);
	const GEN_FLT x4 = 1e-10 + x3 + x2 + x1;
	const GEN_FLT x5 = sqrt(x4);
	const GEN_FLT x6 = 0.5 * x5;
	const GEN_FLT x7 = sin(x6);
	const GEN_FLT x8 = (1. / x4) * (x7 * x7);
	const GEN_FLT x9 = cos(x6);
	const GEN_FLT x10 = 1. / sqrt(1e-11 + (x9 * x9) + (x3 * x8) + (x2 * x8) + (x1 * x8));
	const GEN_FLT x11 = (1. / x5) * x7 * x10 * time;
	const GEN_FLT x12 = x11 * aa_z;
	const GEN_FLT x13 = x11 * obj_qj;
	const GEN_FLT x14 = x11 * aa_x;
	const GEN_FLT x15 = x9 * x10;
	const GEN_FLT x16 = x11 * aa_y;
	out[0] = (x15 * obj_qw) + (-1 * x14 * obj_qi) + (-1 * x13 * aa_y) + (-1 * x12 * obj_qk);
	out[1] = (x16 * obj_qk) + (x14 * obj_qw) + (x15 * obj_qi) + (-1 * x13 * aa_z);
	out[2] = (x15 * obj_qj) + (x12 * obj_qi) + (-1 * x14 * obj_qk) + (x16 * obj_qw);
	out[3] = (x15 * obj_qk) + (-1 * x16 * obj_qi) + (x13 * aa_x) + (x12 * obj_qw);
	out[4] = aa_x;
	out[5] = aa_y;
	out[6] = aa_z;
}

// Jacobian of imu_rot_f wrt [time]
static inline void gen_imu_rot_f_jac_time(FLT* out, const FLT time, const FLT* imu_rot) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT x0 = time * time;
	const GEN_FLT x1 = aa_z * aa_z;
	const GEN_FLT x2 = x0 * x1;
	const GEN_FLT x3 = aa_y * aa_y;
	const GEN_FLT x4 = x0 * x3;
	const GEN_FLT x5 = aa_x * aa_x;
	const GEN_FLT x6 = x0 * x5;
	const GEN_FLT x7 = 1e-10 + x6 + x4 + x2;
	const GEN_FLT x8 = sqrt(x7);
	const GEN_FLT x9 = 0.5 * x8;
	const GEN_FLT x10 = cos(x9);
	const GEN_FLT x11 = 1. / x7;
	const GEN_FLT x12 = sin(x9);
	const GEN_FLT x13 = x12 * x12;
	const GEN_FLT x14 = x13 * x11;
	const GEN_FLT x15 = 1e-11 + (x10 * x10) + (x6 * x14) + (x4 * x14) + (x2 * x14);
	const GEN_FLT x16 = (1. / x8) * x12;
	const GEN_FLT x17 = 2 * time;
	const GEN_FLT x18 = x5 * x17;
	const GEN_FLT x19 = x3 * x17;
	const GEN_FLT x20 = x1 * x17;
	const GEN_FLT x21 = x20 + x19 + x18;
	const GEN_FLT x22 = x21 * x10;
	const GEN_FLT x23 = 0.5 * x22;
	const GEN_FLT x24 = (1. / (x7 * sqrt(x7))) * x12;
	const GEN_FLT x25 = x24 * x23;
	const GEN_FLT x26 = (1. / (x7 * x7)) * x21 * x13;
	const GEN_FLT x27 = ((x2 * x25) + (x20 * x14) + (x14 * x18) + (x4 * x25) + (-1 * x4 * x26) + (-1 * x6 * x26) + (-1 * x2 * x26) + (x6 * x25) + (x14 * x19) + (-1 * x23 * x16)) * (1. / (x15 * sqrt(x15)));
	const GEN_FLT x28 = x27 * x10;
	const GEN_FLT x29 = 1.0/2.0 * x28;
	const GEN_FLT x30 = 1. / sqrt(x15);
	const GEN_FLT x31 = time * obj_qi;
	const GEN_FLT x32 = x30 * x31;
	const GEN_FLT x33 = x32 * aa_x;
	const GEN_FLT x34 = x24 * x21;
	const GEN_FLT x35 = x22 * x11;
	const GEN_FLT x36 = 0.25 * x35;
	const GEN_FLT x37 = x36 * obj_qk;
	const GEN_FLT x38 = x30 * time;
	const GEN_FLT x39 = x38 * aa_z;
	const GEN_FLT x40 = 1.0/2.0 * obj_qk;
	const GEN_FLT x41 = x34 * x39;
	const GEN_FLT x42 = x31 * x27 * x16;
	const GEN_FLT x43 = 0.25 * obj_qw;
	const GEN_FLT x44 = x30 * x16;
	const GEN_FLT x45 = x44 * x21;
	const GEN_FLT x46 = x44 * aa_z;
	const GEN_FLT x47 = x27 * x16 * time;
	const GEN_FLT x48 = x47 * aa_y;
	const GEN_FLT x49 = 1.0/2.0 * obj_qj;
	const GEN_FLT x50 = x38 * aa_y;
	const GEN_FLT x51 = x36 * obj_qj;
	const GEN_FLT x52 = x47 * aa_z;
	const GEN_FLT x53 = x50 * x34;
	const GEN_FLT x54 = x44 * aa_x;
	const GEN_FLT x55 = x44 * aa_y;
	const GEN_FLT x56 = 0.25 * x45;
	const GEN_FLT x57 = 1.0/2.0 * obj_qw;
	const GEN_FLT x58 = x47 * aa_x;
	const GEN_FLT x59 = x38 * aa_x;
	const GEN_FLT x60 = x57 * x34;
	const GEN_FLT x61 = x43 * x35;
	const GEN_FLT x62 = x61 * x38;
	const GEN_FLT x63 = 1.0/2.0 * aa_z;
	const GEN_FLT x64 = x32 * x34;
	const GEN_FLT x65 = x59 * x34;
	const GEN_FLT x66 = x32 * x36;
	const GEN_FLT x67 = 1.0/2.0 * aa_y;
	out[0] = (-1 * x29 * obj_qw) + (-1 * x54 * obj_qi) + (-1 * x37 * x39) + (x53 * x49) + (-1 * x46 * obj_qk) + (-1 * x33 * x36) + (-1 * x43 * x45) + (x52 * x40) + (x40 * x41) + (1.0/2.0 * x42 * aa_x) + (-1 * x55 * obj_qj) + (x48 * x49) + (1.0/2.0 * x34 * x33) + (-1 * x50 * x51);
	out[1] = (-1 * x40 * x48) + (-1 * x29 * obj_qi) + (x55 * obj_qk) + (-1 * x51 * x39) + (-1 * x53 * x40) + (x50 * x37) + (-1 * x58 * x57) + (x52 * x49) + (x41 * x49) + (-1 * x46 * obj_qj) + (-1 * x56 * obj_qi) + (x54 * obj_qw) + (x62 * aa_x) + (-1 * x60 * x59);
	out[2] = (-1 * x63 * x42) + (x66 * aa_z) + (-1 * x54 * obj_qk) + (-1 * x63 * x64) + (x65 * x40) + (-1 * x29 * obj_qj) + (-1 * x57 * x48) + (-1 * x60 * x50) + (-1 * x59 * x37) + (x55 * obj_qw) + (x61 * x50) + (x58 * x40) + (-1 * x56 * obj_qj) + (x46 * obj_qi);
	out[3] = (-1 * x55 * obj_qi) + (-1 * x56 * obj_qk) + (-1 * x40 * x28) + (x62 * aa_z) + (x64 * x67) + (-1 * x57 * x41) + (x67 * x42) + (x51 * x59) + (-1 * x65 * x49) + (x46 * obj_qw) + (-1 * x58 * x49) + (x54 * obj_qj) + (-1 * x52 * x57) + (-1 * x66 * aa_y);
	out[4] = 0;
	out[5] = 0;
	out[6] = 0;
}

// Jacobian of imu_rot_f wrt [obj_qw, obj_qi, obj_qj, obj_qk, aa_x, aa_y, aa_z]
static inline void gen_imu_rot_f_jac_imu_rot(FLT* out, const FLT time, const FLT* imu_rot) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT x0 = time * time;
	const GEN_FLT x1 = aa_z * aa_z;
	const GEN_FLT x2 = x0 * x1;
	const GEN_FLT x3 = aa_y * aa_y;
	const GEN_FLT x4 = x0 * x3;
	const GEN_FLT x5 = aa_x * aa_x;
	const GEN_FLT x6 = x0 * x5;
	const GEN_FLT x7 = 1e-10 + x6 + x4 + x2;
	const GEN_FLT x8 = sqrt(x7);
	const GEN_FLT x9 = 0.5 * x8;
	const GEN_FLT x10 = cos(x9);
	const GEN_FLT x11 = 1. / x7;
	const GEN_FLT x12 = sin(x9);
	const GEN_FLT x13 = x12 * x12;
	const GEN_FLT x14 = x13 * x11;
	const GEN_FLT x15 = 1e-11 + (x10 * x10) + (x6 * x14) + (x4 * x14) + (x2 * x14);
	const GEN_FLT x16 = 1. / sqrt(x15);
	const GEN_FLT x17 = x10 * x16;
	const GEN_FLT x18 = x12 * x16;
	const GEN_FLT x19 = 1. / x8;
	const GEN_FLT x20 = x19 * time;
	const GEN_FLT x21 = x20 * x18;
	const GEN_FLT x22 = x21 * aa_x;
	const GEN_FLT x23 = x21 * aa_y;
	const GEN_FLT x24 = x21 * aa_z;
	const GEN_FLT x25 = -1 * x22;
	const GEN_FLT x26 = -1 * x23;
	const GEN_FLT x27 = -1 * x24;
	const GEN_FLT x28 = 1.0 * x12 * x10;
	const GEN_FLT x29 = x0 * x19;
	const GEN_FLT x30 = x28 * x29;
	const GEN_FLT x31 = 2 * x14;
	const GEN_FLT x32 = x0 * x31;
	const GEN_FLT x33 = time * time * time * time;
	const GEN_FLT x34 = x33 * (aa_x * aa_x * aa_x);
	const GEN_FLT x35 = 2 * (1. / (x7 * x7)) * x13;
	const GEN_FLT x36 = 1. / (x7 * sqrt(x7));
	const GEN_FLT x37 = x36 * x28;
	const GEN_FLT x38 = x33 * x35;
	const GEN_FLT x39 = x3 * x38;
	const GEN_FLT x40 = x33 * x37;
	const GEN_FLT x41 = x40 * aa_x;
	const GEN_FLT x42 = x1 * x38;
	const GEN_FLT x43 = (x1 * x41) + (-1 * x42 * aa_x) + (x3 * x41) + (-1 * x39 * aa_x) + (x34 * x37) + (-1 * x34 * x35) + (x32 * aa_x) + (-1 * x30 * aa_x);
	const GEN_FLT x44 = 1.0/2.0 * (1. / (x15 * sqrt(x15)));
	const GEN_FLT x45 = x44 * x10;
	const GEN_FLT x46 = x43 * x45;
	const GEN_FLT x47 = x44 * x20 * x12;
	const GEN_FLT x48 = x43 * x47;
	const GEN_FLT x49 = x48 * aa_z;
	const GEN_FLT x50 = x18 * obj_qw;
	const GEN_FLT x51 = 0.5 * x29;
	const GEN_FLT x52 = x51 * aa_x;
	const GEN_FLT x53 = aa_y * obj_qj;
	const GEN_FLT x54 = x21 * obj_qi;
	const GEN_FLT x55 = -1 * x54;
	const GEN_FLT x56 = x48 * aa_x;
	const GEN_FLT x57 = time * time * time;
	const GEN_FLT x58 = x57 * x36;
	const GEN_FLT x59 = x5 * x58;
	const GEN_FLT x60 = x18 * obj_qi;
	const GEN_FLT x61 = 0.5 * x57 * x11 * x17;
	const GEN_FLT x62 = x61 * aa_x;
	const GEN_FLT x63 = x62 * x53;
	const GEN_FLT x64 = x18 * obj_qj;
	const GEN_FLT x65 = x58 * aa_x;
	const GEN_FLT x66 = x65 * aa_y;
	const GEN_FLT x67 = x64 * x66;
	const GEN_FLT x68 = x5 * x61;
	const GEN_FLT x69 = x62 * aa_z;
	const GEN_FLT x70 = x18 * obj_qk;
	const GEN_FLT x71 = x65 * aa_z;
	const GEN_FLT x72 = (x71 * x70) + (-1 * x69 * obj_qk);
	const GEN_FLT x73 = x60 * x51;
	const GEN_FLT x74 = aa_y * obj_qk;
	const GEN_FLT x75 = x69 * obj_qj;
	const GEN_FLT x76 = x71 * x64;
	const GEN_FLT x77 = x74 * x62;
	const GEN_FLT x78 = x21 * obj_qw;
	const GEN_FLT x79 = x70 * x66;
	const GEN_FLT x80 = x21 * obj_qk;
	const GEN_FLT x81 = -1 * x80;
	const GEN_FLT x82 = aa_y * obj_qw;
	const GEN_FLT x83 = x69 * obj_qi;
	const GEN_FLT x84 = x71 * x60;
	const GEN_FLT x85 = (-1 * x66 * x50) + (x82 * x62);
	const GEN_FLT x86 = aa_z * obj_qw;
	const GEN_FLT x87 = aa_y * obj_qi;
	const GEN_FLT x88 = x64 * x20;
	const GEN_FLT x89 = x50 * aa_z;
	const GEN_FLT x90 = (x86 * x62) + (-1 * x89 * x65);
	const GEN_FLT x91 = (x60 * x66) + (-1 * x87 * x62);
	const GEN_FLT x92 = -1 * x88;
	const GEN_FLT x93 = x0 * aa_y;
	const GEN_FLT x94 = x93 * x19;
	const GEN_FLT x95 = x5 * x38;
	const GEN_FLT x96 = x40 * aa_y;
	const GEN_FLT x97 = aa_y * aa_y * aa_y;
	const GEN_FLT x98 = (x1 * x96) + (x93 * x31) + (x5 * x96) + (-1 * x95 * aa_y) + (-1 * x42 * aa_y) + (x97 * x40) + (-1 * x97 * x38) + (-1 * x94 * x28);
	const GEN_FLT x99 = x98 * x45;
	const GEN_FLT x100 = x98 * x47;
	const GEN_FLT x101 = x100 * aa_z;
	const GEN_FLT x102 = x61 * aa_z;
	const GEN_FLT x103 = x74 * x102;
	const GEN_FLT x104 = 0.5 * x94;
	const GEN_FLT x105 = x3 * x61;
	const GEN_FLT x106 = x58 * aa_y;
	const GEN_FLT x107 = x106 * aa_z;
	const GEN_FLT x108 = x70 * x107;
	const GEN_FLT x109 = x3 * x58;
	const GEN_FLT x110 = x100 * aa_x;
	const GEN_FLT x111 = x100 * aa_y;
	const GEN_FLT x112 = x100 * obj_qj;
	const GEN_FLT x113 = (x64 * x107) + (-1 * x53 * x102);
	const GEN_FLT x114 = x87 * x102;
	const GEN_FLT x115 = x60 * x107;
	const GEN_FLT x116 = (-1 * x89 * x106) + (x86 * x61 * aa_y);
	const GEN_FLT x117 = x40 * aa_z;
	const GEN_FLT x118 = aa_z * aa_z * aa_z;
	const GEN_FLT x119 = (-1 * x95 * aa_z) + (x32 * aa_z) + (x40 * x118) + (-1 * x30 * aa_z) + (x3 * x117) + (-1 * x39 * aa_z) + (-1 * x38 * x118) + (x5 * x117);
	const GEN_FLT x120 = x45 * x119;
	const GEN_FLT x121 = x1 * x58;
	const GEN_FLT x122 = x18 * x121;
	const GEN_FLT x123 = x1 * x61;
	const GEN_FLT x124 = x47 * x119;
	const GEN_FLT x125 = x124 * aa_z;
	const GEN_FLT x126 = x124 * aa_x;
	const GEN_FLT x127 = x51 * aa_z;
	out[0] = x17;
	out[1] = x22;
	out[2] = x23;
	out[3] = x24;
	out[4] = 0;
	out[5] = 0;
	out[6] = 0;
	out[7] = x25;
	out[8] = x17;
	out[9] = x24;
	out[10] = x26;
	out[11] = 0;
	out[12] = 0;
	out[13] = 0;
	out[14] = x26;
	out[15] = x27;
	out[16] = x17;
	out[17] = x22;
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
	out[21] = x27;
	out[22] = x23;
	out[23] = x25;
	out[24] = x17;
	out[25] = 0;
	out[26] = 0;
	out[27] = 0;
	out[28] = x72 + (x49 * obj_qk) + x55 + (-1 * x50 * x52) + (x53 * x48) + (x60 * x59) + (-1 * x46 * obj_qw) + (-1 * x63) + x67 + (x56 * obj_qi) + (-1 * x68 * obj_qi);
	out[29] = (-1 * x79) + x78 + (-1 * x73 * aa_x) + (-1 * x46 * obj_qi) + x77 + (x49 * obj_qj) + (-1 * x74 * x48) + x76 + (-1 * x56 * obj_qw) + (x68 * obj_qw) + (-1 * x75) + (-1 * x50 * x59);
	out[30] = x85 + x81 + (-1 * x46 * obj_qj) + (-1 * x82 * x48) + (-1 * x64 * x52) + (x70 * x59) + x83 + (x56 * obj_qk) + (-1 * x68 * obj_qk) + (-1 * x49 * obj_qi) + (-1 * x84);
	out[31] = x91 + x88 + (x68 * obj_qj) + (-1 * x64 * x59) + (-1 * x56 * obj_qj) + (-1 * x46 * obj_qk) + (x87 * x48) + (-1 * x86 * x48) + x90 + (-1 * x70 * x52);
	out[32] = 1;
	out[33] = 0;
	out[34] = 0;
	out[35] = x91 + (-1 * x99 * obj_qw) + (x101 * obj_qk) + x92 + (-1 * x105 * obj_qj) + (x53 * x100) + (-1 * x50 * x104) + (-1 * x103) + x108 + (x64 * x109) + (x110 * obj_qi);
	out[36] = x85 + (-1 * x70 * x109) + (x105 * obj_qk) + (-1 * x110 * obj_qw) + x113 + (x112 * aa_z) + x80 + (-1 * x111 * obj_qk) + (-1 * x99 * obj_qi) + (-1 * x60 * x104);
	out[37] = (-1 * x115) + (-1 * x101 * obj_qi) + (-1 * x50 * x109) + (x105 * obj_qw) + (-1 * x111 * obj_qw) + (x110 * obj_qk) + (-1 * x64 * x104) + x78 + (-1 * x99 * obj_qj) + x79 + x114 + (-1 * x77);
	out[38] = x55 + (-1 * x70 * x104) + (-1 * x99 * obj_qk) + (-1 * x112 * aa_x) + x63 + (x111 * obj_qi) + x116 + (x60 * x109) + (-1 * x86 * x100) + (-1 * x105 * obj_qi) + (-1 * x67);
	out[39] = 0;
	out[40] = 1;
	out[41] = 0;
	out[42] = x113 + (-1 * x89 * x51) + x84 + (-1 * x120 * obj_qw) + (-1 * x123 * obj_qk) + (x122 * obj_qk) + (-1 * x83) + x81 + (x126 * obj_qi) + (x125 * obj_qk) + (x53 * x124);
	out[43] = x90 + (x64 * x121) + (-1 * x123 * obj_qj) + (-1 * x120 * obj_qi) + x92 + (x125 * obj_qj) + x103 + (-1 * x108) + (-1 * x73 * aa_z) + (-1 * x74 * x124) + (-1 * x126 * obj_qw);
	out[44] = (-1 * x122 * obj_qi) + x116 + (x123 * obj_qi) + (-1 * x64 * x127) + x72 + (-1 * x82 * x124) + (x126 * obj_qk) + (-1 * x120 * obj_qj) + (-1 * x125 * obj_qi) + x54;
	out[45] = (-1 * x126 * obj_qj) + (-1 * x70 * x127) + x115 + (-1 * x120 * obj_qk) + (-1 * x76) + (-1 * x86 * x124) + (x123 * obj_qw) + (-1 * x50 * x121) + x78 + x75 + (x87 * x124) + (-1 * x114);
	out[46] = 0;
	out[47] = 0;
	out[48] = 1;
}

static inline void gen_kalman_model_predict(FLT* out, const FLT t, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = t * t;
	const GEN_FLT x1 = 1.0/2.0 * x0;
	const GEN_FLT x2 = x0 * (avz * avz);
	const GEN_FLT x3 = x0 * (avy * avy);
	const GEN_FLT x4 = x0 * (avx * avx);
	const GEN_FLT x5 = 1e-10 + x4 + x3 + x2;
	const GEN_FLT x6 = sqrt(x5);
	const GEN_FLT x7 = 0.5 * x6;
	const GEN_FLT x8 = sin(x7);
	const GEN_FLT x9 = (1. / x5) * (x8 * x8);
	const GEN_FLT x10 = cos(x7);
	const GEN_FLT x11 = 1. / sqrt(1e-11 + (x10 * x10) + (x4 * x9) + (x3 * x9) + (x2 * x9));
	const GEN_FLT x12 = t * (1. / x6) * x8 * x11;
	const GEN_FLT x13 = x12 * avz;
	const GEN_FLT x14 = x12 * avy;
	const GEN_FLT x15 = x12 * obj_qi;
	const GEN_FLT x16 = x11 * x10;
	const GEN_FLT x17 = x12 * avx;
	out[0] = obj_px + (x1 * acc_x) + (t * vx);
	out[1] = obj_py + (x1 * acc_y) + (t * vy);
	out[2] = obj_pz + (t * vz) + (x1 * acc_z);
	out[3] = (x16 * obj_qw) + (-1 * x15 * avx) + (-1 * x14 * obj_qj) + (-1 * x13 * obj_qk);
	out[4] = (x16 * obj_qi) + (x17 * obj_qw) + (x14 * obj_qk) + (-1 * x13 * obj_qj);
	out[5] = (x16 * obj_qj) + (-1 * x17 * obj_qk) + (x14 * obj_qw) + (x15 * avz);
	out[6] = (x16 * obj_qk) + (x17 * obj_qj) + (-1 * x15 * avy) + (x13 * obj_qw);
	out[7] = vx + (t * acc_x);
	out[8] = vy + (t * acc_y);
	out[9] = vz + (t * acc_z);
	out[10] = avx;
	out[11] = avy;
	out[12] = avz;
	out[13] = acc_x;
	out[14] = acc_y;
	out[15] = acc_z;
	out[16] = gbx;
	out[17] = gby;
	out[18] = gbz;
}

// Jacobian of kalman_model_predict wrt [t]
static inline void gen_kalman_model_predict_jac_t(FLT* out, const FLT t, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = t * t;
	const GEN_FLT x1 = avz * avz;
	const GEN_FLT x2 = x0 * x1;
	const GEN_FLT x3 = avy * avy;
	const GEN_FLT x4 = x0 * x3;
	const GEN_FLT x5 = avx * avx;
	const GEN_FLT x6 = x0 * x5;
	const GEN_FLT x7 = 1e-10 + x6 + x4 + x2;
	const GEN_FLT x8 = 1. / x7;
	const GEN_FLT x9 = sqrt(x7);
	const GEN_FLT x10 = 0.5 * x9;
	const GEN_FLT x11 = sin(x10);
	const GEN_FLT x12 = x11 * x11;
	const GEN_FLT x13 = x8 * x12;
	const GEN_FLT x14 = cos(x10);
	const GEN_FLT x15 = 1e-11 + (x14 * x14) + (x4 * x13) + (x6 * x13) + (x2 * x13);
	const GEN_FLT x16 = 1. / sqrt(x15);
	const GEN_FLT x17 = (1. / x9) * x11;
	const GEN_FLT x18 = x17 * x16;
	const GEN_FLT x19 = x18 * avx;
	const GEN_FLT x20 = t * avx;
	const GEN_FLT x21 = 2 * t;
	const GEN_FLT x22 = x5 * x21;
	const GEN_FLT x23 = x3 * x21;
	const GEN_FLT x24 = x1 * x21;
	const GEN_FLT x25 = x24 + x23 + x22;
	const GEN_FLT x26 = x25 * x14;
	const GEN_FLT x27 = x8 * x26;
	const GEN_FLT x28 = 0.25 * x27;
	const GEN_FLT x29 = x28 * x16;
	const GEN_FLT x30 = x20 * x29;
	const GEN_FLT x31 = x16 * avz;
	const GEN_FLT x32 = t * x31;
	const GEN_FLT x33 = x32 * x28;
	const GEN_FLT x34 = x18 * avy;
	const GEN_FLT x35 = 1.0/2.0 * obj_qk;
	const GEN_FLT x36 = (1. / (x7 * sqrt(x7))) * x11;
	const GEN_FLT x37 = x36 * x25;
	const GEN_FLT x38 = x32 * x37;
	const GEN_FLT x39 = 0.25 * obj_qj;
	const GEN_FLT x40 = x39 * x27;
	const GEN_FLT x41 = x40 * x16;
	const GEN_FLT x42 = t * avy;
	const GEN_FLT x43 = 1.0/2.0 * obj_qj;
	const GEN_FLT x44 = 0.5 * x26;
	const GEN_FLT x45 = (1. / (x7 * x7)) * x25 * x12;
	const GEN_FLT x46 = x44 * x36;
	const GEN_FLT x47 = ((x2 * x46) + (-1 * x2 * x45) + (x4 * x46) + (x24 * x13) + (-1 * x4 * x45) + (x6 * x46) + (-1 * x6 * x45) + (x22 * x13) + (x23 * x13) + (-1 * x44 * x17)) * (1. / (x15 * sqrt(x15)));
	const GEN_FLT x48 = x47 * x17;
	const GEN_FLT x49 = x43 * x48;
	const GEN_FLT x50 = x18 * avz;
	const GEN_FLT x51 = x47 * x14;
	const GEN_FLT x52 = 1.0/2.0 * x51;
	const GEN_FLT x53 = x25 * x18;
	const GEN_FLT x54 = 0.25 * x53;
	const GEN_FLT x55 = 1.0/2.0 * x48;
	const GEN_FLT x56 = t * x55;
	const GEN_FLT x57 = x56 * avx;
	const GEN_FLT x58 = x37 * x16;
	const GEN_FLT x59 = x58 * x42;
	const GEN_FLT x60 = x56 * avz;
	const GEN_FLT x61 = 1.0/2.0 * obj_qi;
	const GEN_FLT x62 = x58 * x20;
	const GEN_FLT x63 = t * obj_qw;
	const GEN_FLT x64 = x63 * avx;
	const GEN_FLT x65 = 1.0/2.0 * x58;
	const GEN_FLT x66 = x56 * avy;
	const GEN_FLT x67 = x42 * x29;
	const GEN_FLT x68 = x63 * avy;
	const GEN_FLT x69 = x63 * x31;
	const GEN_FLT x70 = x43 * x20;
	out[0] = vx + (t * acc_x);
	out[1] = vy + (t * acc_y);
	out[2] = (t * acc_z) + vz;
	out[3] = (x60 * obj_qk) + (x59 * x43) + (x57 * obj_qi) + (-1 * x19 * obj_qi) + (-1 * x30 * obj_qi) + (-1 * x52 * obj_qw) + (x42 * x49) + (-1 * x33 * obj_qk) + (-1 * x34 * obj_qj) + (x35 * x38) + (-1 * x50 * obj_qk) + (x61 * x62) + (-1 * x41 * x42) + (-1 * x54 * obj_qw);
	out[4] = (-1 * x59 * x35) + (x67 * obj_qk) + (-1 * x66 * obj_qk) + (-1 * x52 * obj_qi) + (-1 * x54 * obj_qi) + (-1 * x64 * x65) + (x64 * x29) + (x43 * x38) + (-1 * x64 * x55) + (x19 * obj_qw) + (t * x49 * avz) + (-1 * x40 * x32) + (x34 * obj_qk) + (-1 * x50 * obj_qj);
	out[5] = (x34 * obj_qw) + (-1 * x30 * obj_qk) + (-1 * x68 * x55) + (-1 * x53 * x39) + (-1 * x51 * x43) + (-1 * x68 * x65) + (-1 * x19 * obj_qk) + (-1 * x60 * obj_qi) + (x57 * obj_qk) + (x33 * obj_qi) + (x50 * obj_qi) + (x62 * x35) + (-1 * x61 * x38) + (x68 * x29);
	out[6] = (-1 * x67 * obj_qi) + (x19 * obj_qj) + (x66 * obj_qi) + (-1 * x54 * obj_qk) + (-1 * x34 * obj_qi) + (x41 * x20) + (-1.0/2.0 * x69 * x37) + (x61 * x59) + (x50 * obj_qw) + (x69 * x28) + (-1 * x63 * x55 * avz) + (-1 * x70 * x48) + (-1 * x70 * x58) + (-1 * x52 * obj_qk);
	out[7] = acc_x;
	out[8] = acc_y;
	out[9] = acc_z;
	out[10] = 0;
	out[11] = 0;
	out[12] = 0;
	out[13] = 0;
	out[14] = 0;
	out[15] = 0;
	out[16] = 0;
	out[17] = 0;
	out[18] = 0;
}

// Jacobian of kalman_model_predict wrt [obj_px, obj_py, obj_pz, obj_qw, obj_qi, obj_qj, obj_qk, vx, vy, vz, avx, avy, avz, acc_x, acc_y, acc_z, gbx, gby, gbz]
static inline void gen_kalman_model_predict_jac_kalman_model(FLT* out, const FLT t, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = t * t;
	const GEN_FLT x1 = 1.0/2.0 * x0;
	const GEN_FLT x2 = avz * avz;
	const GEN_FLT x3 = x0 * x2;
	const GEN_FLT x4 = avy * avy;
	const GEN_FLT x5 = x0 * x4;
	const GEN_FLT x6 = avx * avx;
	const GEN_FLT x7 = x0 * x6;
	const GEN_FLT x8 = 1e-10 + x7 + x5 + x3;
	const GEN_FLT x9 = 1. / x8;
	const GEN_FLT x10 = sqrt(x8);
	const GEN_FLT x11 = 0.5 * x10;
	const GEN_FLT x12 = sin(x11);
	const GEN_FLT x13 = x12 * x12;
	const GEN_FLT x14 = x9 * x13;
	const GEN_FLT x15 = cos(x11);
	const GEN_FLT x16 = 1e-11 + (x7 * x14) + (x5 * x14) + (x15 * x15) + (x3 * x14);
	const GEN_FLT x17 = 1. / sqrt(x16);
	const GEN_FLT x18 = x15 * x17;
	const GEN_FLT x19 = x12 * (1. / x10);
	const GEN_FLT x20 = t * x19;
	const GEN_FLT x21 = x20 * x17;
	const GEN_FLT x22 = x21 * avx;
	const GEN_FLT x23 = -1 * x22;
	const GEN_FLT x24 = x21 * avy;
	const GEN_FLT x25 = -1 * x24;
	const GEN_FLT x26 = x21 * avz;
	const GEN_FLT x27 = -1 * x26;
	const GEN_FLT x28 = x21 * obj_qi;
	const GEN_FLT x29 = -1 * x28;
	const GEN_FLT x30 = 1.0 * x15;
	const GEN_FLT x31 = x0 * x19;
	const GEN_FLT x32 = x31 * avx;
	const GEN_FLT x33 = 2 * x14;
	const GEN_FLT x34 = x0 * x33;
	const GEN_FLT x35 = avx * avx * avx;
	const GEN_FLT x36 = t * t * t * t;
	const GEN_FLT x37 = 2 * (1. / (x8 * x8)) * x13;
	const GEN_FLT x38 = x36 * x37;
	const GEN_FLT x39 = (1. / (x8 * sqrt(x8))) * x12;
	const GEN_FLT x40 = x30 * x39;
	const GEN_FLT x41 = x40 * x36;
	const GEN_FLT x42 = x38 * avx;
	const GEN_FLT x43 = x2 * x41;
	const GEN_FLT x44 = (x43 * avx) + (-1 * x2 * x42) + (x4 * x41 * avx) + (-1 * x4 * x42) + (-1 * x35 * x38) + (x41 * x35) + (x34 * avx) + (-1 * x30 * x32);
	const GEN_FLT x45 = 1.0/2.0 * (1. / (x16 * sqrt(x16)));
	const GEN_FLT x46 = x45 * x15;
	const GEN_FLT x47 = x44 * x46;
	const GEN_FLT x48 = x17 * obj_qw;
	const GEN_FLT x49 = 0.5 * x32;
	const GEN_FLT x50 = x45 * x20;
	const GEN_FLT x51 = x50 * x44;
	const GEN_FLT x52 = x51 * avz;
	const GEN_FLT x53 = x17 * obj_qj;
	const GEN_FLT x54 = t * t * t;
	const GEN_FLT x55 = x54 * x39;
	const GEN_FLT x56 = x55 * avy;
	const GEN_FLT x57 = x56 * avx;
	const GEN_FLT x58 = x53 * x57;
	const GEN_FLT x59 = 0.5 * x9 * x54 * x18;
	const GEN_FLT x60 = x59 * avy;
	const GEN_FLT x61 = x60 * avx;
	const GEN_FLT x62 = x61 * obj_qj;
	const GEN_FLT x63 = x17 * obj_qi;
	const GEN_FLT x64 = x6 * x55;
	const GEN_FLT x65 = x50 * avy;
	const GEN_FLT x66 = x65 * x44;
	const GEN_FLT x67 = x6 * x59;
	const GEN_FLT x68 = avx * obj_qi;
	const GEN_FLT x69 = avx * obj_qk;
	const GEN_FLT x70 = x17 * obj_qk;
	const GEN_FLT x71 = x55 * avx;
	const GEN_FLT x72 = x71 * avz;
	const GEN_FLT x73 = (x70 * x72) + (-1 * x69 * x59 * avz);
	const GEN_FLT x74 = x53 * x20;
	const GEN_FLT x75 = -1 * x74;
	const GEN_FLT x76 = x0 * avy;
	const GEN_FLT x77 = x36 * (avy * avy * avy);
	const GEN_FLT x78 = x76 * x19;
	const GEN_FLT x79 = x38 * avy;
	const GEN_FLT x80 = (x43 * avy) + (-1 * x78 * x30) + (x77 * x40) + (-1 * x6 * x79) + (-1 * x2 * x79) + (-1 * x77 * x37) + (x76 * x33) + (x6 * x41 * avy);
	const GEN_FLT x81 = x80 * x46;
	const GEN_FLT x82 = 0.5 * x78;
	const GEN_FLT x83 = x60 * avz;
	const GEN_FLT x84 = x83 * obj_qk;
	const GEN_FLT x85 = x80 * x50;
	const GEN_FLT x86 = x85 * avz;
	const GEN_FLT x87 = x80 * x65;
	const GEN_FLT x88 = x4 * x55;
	const GEN_FLT x89 = x56 * avz;
	const GEN_FLT x90 = x89 * x70;
	const GEN_FLT x91 = x4 * x59;
	const GEN_FLT x92 = (-1 * x61 * obj_qi) + (x63 * x57);
	const GEN_FLT x93 = x31 * avz;
	const GEN_FLT x94 = x38 * avz;
	const GEN_FLT x95 = x41 * avz;
	const GEN_FLT x96 = avz * avz * avz;
	const GEN_FLT x97 = (x96 * x41) + (-1 * x96 * x38) + (x34 * avz) + (-1 * x4 * x94) + (x4 * x95) + (x6 * x95) + (-1 * x6 * x94) + (-1 * x93 * x30);
	const GEN_FLT x98 = x97 * x46;
	const GEN_FLT x99 = x65 * x97;
	const GEN_FLT x100 = x2 * x55;
	const GEN_FLT x101 = 0.5 * x93;
	const GEN_FLT x102 = x59 * avx;
	const GEN_FLT x103 = avz * x102;
	const GEN_FLT x104 = x103 * obj_qi;
	const GEN_FLT x105 = x50 * x97;
	const GEN_FLT x106 = avz * x105;
	const GEN_FLT x107 = x2 * x59;
	const GEN_FLT x108 = x21 * obj_qk;
	const GEN_FLT x109 = -1 * x108;
	const GEN_FLT x110 = x72 * x63;
	const GEN_FLT x111 = x53 * avz;
	const GEN_FLT x112 = (x56 * x111) + (-1 * x83 * obj_qj);
	const GEN_FLT x113 = avz * obj_qj;
	const GEN_FLT x114 = x102 * x113;
	const GEN_FLT x115 = x60 * x69;
	const GEN_FLT x116 = x70 * x57;
	const GEN_FLT x117 = x71 * x111;
	const GEN_FLT x118 = x51 * avx;
	const GEN_FLT x119 = x21 * obj_qw;
	const GEN_FLT x120 = x88 * x17;
	const GEN_FLT x121 = x85 * avx;
	const GEN_FLT x122 = (-1 * x57 * x48) + (x61 * obj_qw);
	const GEN_FLT x123 = avx * x105;
	const GEN_FLT x124 = (-1 * x72 * x48) + (x103 * obj_qw);
	const GEN_FLT x125 = x89 * x63;
	const GEN_FLT x126 = x83 * obj_qi;
	const GEN_FLT x127 = (-1 * x89 * x48) + (x83 * obj_qw);
	out[0] = 1;
	out[1] = 0;
	out[2] = 0;
	out[3] = 0;
	out[4] = 0;
	out[5] = 0;
	out[6] = 0;
	out[7] = t;
	out[8] = 0;
	out[9] = 0;
	out[10] = 0;
	out[11] = 0;
	out[12] = 0;
	out[13] = x1;
	out[14] = 0;
	out[15] = 0;
	out[16] = 0;
	out[17] = 0;
	out[18] = 0;
	out[19] = 0;
	out[20] = 1;
	out[21] = 0;
	out[22] = 0;
	out[23] = 0;
	out[24] = 0;
	out[25] = 0;
	out[26] = 0;
	out[27] = t;
	out[28] = 0;
	out[29] = 0;
	out[30] = 0;
	out[31] = 0;
	out[32] = 0;
	out[33] = x1;
	out[34] = 0;
	out[35] = 0;
	out[36] = 0;
	out[37] = 0;
	out[38] = 0;
	out[39] = 0;
	out[40] = 1;
	out[41] = 0;
	out[42] = 0;
	out[43] = 0;
	out[44] = 0;
	out[45] = 0;
	out[46] = 0;
	out[47] = t;
	out[48] = 0;
	out[49] = 0;
	out[50] = 0;
	out[51] = 0;
	out[52] = 0;
	out[53] = x1;
	out[54] = 0;
	out[55] = 0;
	out[56] = 0;
	out[57] = 0;
	out[58] = 0;
	out[59] = 0;
	out[60] = x18;
	out[61] = x23;
	out[62] = x25;
	out[63] = x27;
	out[64] = 0;
	out[65] = 0;
	out[66] = 0;
	out[67] = (x63 * x64) + (-1 * x67 * obj_qi) + (-1 * x47 * obj_qw) + x58 + x73 + x29 + (-1 * x62) + (x52 * obj_qk) + (x66 * obj_qj) + (-1 * x48 * x49) + (x68 * x51);
	out[68] = x75 + (-1 * x81 * obj_qw) + (-1 * x91 * obj_qj) + (-1 * x82 * x48) + (-1 * x84) + x92 + (x86 * obj_qk) + (x87 * obj_qj) + (x88 * x53) + x90 + (x85 * x68);
	out[69] = (x99 * obj_qj) + (-1 * x98 * obj_qw) + (x70 * x100) + (-1 * x48 * x101) + x112 + (x68 * x105) + (-1 * x104) + (x106 * obj_qk) + x109 + (-1 * x107 * obj_qk) + x110;
	out[70] = 0;
	out[71] = 0;
	out[72] = 0;
	out[73] = 0;
	out[74] = 0;
	out[75] = 0;
	out[76] = 0;
	out[77] = 0;
	out[78] = 0;
	out[79] = x22;
	out[80] = x18;
	out[81] = x27;
	out[82] = x24;
	out[83] = 0;
	out[84] = 0;
	out[85] = 0;
	out[86] = (-1 * x64 * x48) + (-1 * x63 * x49) + (-1 * x66 * obj_qk) + (x51 * x113) + x115 + x119 + (x67 * obj_qw) + (-1 * x116) + x117 + (-1 * x114) + (-1 * x118 * obj_qw) + (-1 * x47 * obj_qi);
	out[87] = x122 + x112 + (-1 * x121 * obj_qw) + x108 + (-1 * x82 * x63) + (x85 * x113) + (x91 * obj_qk) + (-1 * x87 * obj_qk) + (-1 * x120 * obj_qk) + (-1 * x81 * obj_qi);
	out[88] = x124 + (-1 * x63 * x101) + (-1 * x98 * obj_qi) + (x105 * x113) + x84 + (-1 * x90) + (x53 * x100) + (-1 * x99 * obj_qk) + x75 + (-1 * x107 * obj_qj) + (-1 * x123 * obj_qw);
	out[89] = 0;
	out[90] = 0;
	out[91] = 0;
	out[92] = 0;
	out[93] = 0;
	out[94] = 0;
	out[95] = 0;
	out[96] = 0;
	out[97] = 0;
	out[98] = x24;
	out[99] = x26;
	out[100] = x18;
	out[101] = x23;
	out[102] = 0;
	out[103] = 0;
	out[104] = 0;
	out[105] = x122 + (-1 * x67 * obj_qk) + (-1 * x52 * obj_qi) + x109 + (-1 * x53 * x49) + (-1 * x47 * obj_qj) + (-1 * x66 * obj_qw) + (-1 * x110) + x104 + (x69 * x51) + (x70 * x64);
	out[106] = (-1 * x115) + (-1 * x88 * x48) + (x91 * obj_qw) + (-1 * x125) + (-1 * x87 * obj_qw) + (x85 * x69) + (-1 * x86 * obj_qi) + x119 + (-1 * x81 * obj_qj) + x116 + (-1 * x82 * x53) + x126;
	out[107] = x73 + (x69 * x105) + (-1 * x63 * x100) + (x107 * obj_qi) + (-1 * x99 * obj_qw) + x28 + (-1 * x98 * obj_qj) + (-1 * x106 * obj_qi) + x127 + (-1 * x53 * x101);
	out[108] = 0;
	out[109] = 0;
	out[110] = 0;
	out[111] = 0;
	out[112] = 0;
	out[113] = 0;
	out[114] = 0;
	out[115] = 0;
	out[116] = 0;
	out[117] = x26;
	out[118] = x25;
	out[119] = x22;
	out[120] = x18;
	out[121] = 0;
	out[122] = 0;
	out[123] = 0;
	out[124] = x124 + (x66 * obj_qi) + x74 + (x67 * obj_qj) + (-1 * x52 * obj_qw) + x92 + (-1 * x118 * obj_qj) + (-1 * x64 * x53) + (-1 * x70 * x49) + (-1 * x47 * obj_qk);
	out[125] = x127 + (-1 * x81 * obj_qk) + (-1 * x82 * x70) + (-1 * x91 * obj_qi) + (-1 * x58) + (x87 * obj_qi) + (-1 * x121 * obj_qj) + (-1 * x86 * obj_qw) + x62 + x29 + (x120 * obj_qi);
	out[126] = x125 + x114 + (-1 * x106 * obj_qw) + (-1 * x98 * obj_qk) + (x107 * obj_qw) + (-1 * x70 * x101) + (-1 * x48 * x100) + x119 + (-1 * x123 * obj_qj) + (-1 * x126) + (-1 * x117) + (x99 * obj_qi);
	out[127] = 0;
	out[128] = 0;
	out[129] = 0;
	out[130] = 0;
	out[131] = 0;
	out[132] = 0;
	out[133] = 0;
	out[134] = 0;
	out[135] = 0;
	out[136] = 0;
	out[137] = 0;
	out[138] = 0;
	out[139] = 0;
	out[140] = 1;
	out[141] = 0;
	out[142] = 0;
	out[143] = 0;
	out[144] = 0;
	out[145] = 0;
	out[146] = t;
	out[147] = 0;
	out[148] = 0;
	out[149] = 0;
	out[150] = 0;
	out[151] = 0;
	out[152] = 0;
	out[153] = 0;
	out[154] = 0;
	out[155] = 0;
	out[156] = 0;
	out[157] = 0;
	out[158] = 0;
	out[159] = 0;
	out[160] = 1;
	out[161] = 0;
	out[162] = 0;
	out[163] = 0;
	out[164] = 0;
	out[165] = 0;
	out[166] = t;
	out[167] = 0;
	out[168] = 0;
	out[169] = 0;
	out[170] = 0;
	out[171] = 0;
	out[172] = 0;
	out[173] = 0;
	out[174] = 0;
	out[175] = 0;
	out[176] = 0;
	out[177] = 0;
	out[178] = 0;
	out[179] = 0;
	out[180] = 1;
	out[181] = 0;
	out[182] = 0;
	out[183] = 0;
	out[184] = 0;
	out[185] = 0;
	out[186] = t;
	out[187] = 0;
	out[188] = 0;
	out[189] = 0;
	out[190] = 0;
	out[191] = 0;
	out[192] = 0;
	out[193] = 0;
	out[194] = 0;
	out[195] = 0;
	out[196] = 0;
	out[197] = 0;
	out[198] = 0;
	out[199] = 0;
	out[200] = 1;
	out[201] = 0;
	out[202] = 0;
	out[203] = 0;
	out[204] = 0;
	out[205] = 0;
	out[206] = 0;
	out[207] = 0;
	out[208] = 0;
	out[209] = 0;
	out[210] = 0;
	out[211] = 0;
	out[212] = 0;
	out[213] = 0;
	out[214] = 0;
	out[215] = 0;
	out[216] = 0;
	out[217] = 0;
	out[218] = 0;
	out[219] = 0;
	out[220] = 1;
	out[221] = 0;
	out[222] = 0;
	out[223] = 0;
	out[224] = 0;
	out[225] = 0;
	out[226] = 0;
	out[227] = 0;
	out[228] = 0;
	out[229] = 0;
	out[230] = 0;
	out[231] = 0;
	out[232] = 0;
	out[233] = 0;
	out[234] = 0;
	out[235] = 0;
	out[236] = 0;
	out[237] = 0;
	out[238] = 0;
	out[239] = 0;
	out[240] = 1;
	out[241] = 0;
	out[242] = 0;
	out[243] = 0;
	out[244] = 0;
	out[245] = 0;
	out[246] = 0;
	out[247] = 0;
	out[248] = 0;
	out[249] = 0;
	out[250] = 0;
	out[251] = 0;
	out[252] = 0;
	out[253] = 0;
	out[254] = 0;
	out[255] = 0;
	out[256] = 0;
	out[257] = 0;
	out[258] = 0;
	out[259] = 0;
	out[260] = 1;
	out[261] = 0;
	out[262] = 0;
	out[263] = 0;
	out[264] = 0;
	out[265] = 0;
	out[266] = 0;
	out[267] = 0;
	out[268] = 0;
	out[269] = 0;
	out[270] = 0;
	out[271] = 0;
	out[272] = 0;
	out[273] = 0;
	out[274] = 0;
	out[275] = 0;
	out[276] = 0;
	out[277] = 0;
	out[278] = 0;
	out[279] = 0;
	out[280] = 1;
	out[281] = 0;
	out[282] = 0;
	out[283] = 0;
	out[284] = 0;
	out[285] = 0;
	out[286] = 0;
	out[287] = 0;
	out[288] = 0;
	out[289] = 0;
	out[290] = 0;
	out[291] = 0;
	out[292] = 0;
	out[293] = 0;
	out[294] = 0;
	out[295] = 0;
	out[296] = 0;
	out[297] = 0;
	out[298] = 0;
	out[299] = 0;
	out[300] = 1;
	out[301] = 0;
	out[302] = 0;
	out[303] = 0;
	out[304] = 0;
	out[305] = 0;
	out[306] = 0;
	out[307] = 0;
	out[308] = 0;
	out[309] = 0;
	out[310] = 0;
	out[311] = 0;
	out[312] = 0;
	out[313] = 0;
	out[314] = 0;
	out[315] = 0;
	out[316] = 0;
	out[317] = 0;
	out[318] = 0;
	out[319] = 0;
	out[320] = 1;
	out[321] = 0;
	out[322] = 0;
	out[323] = 0;
	out[324] = 0;
	out[325] = 0;
	out[326] = 0;
	out[327] = 0;
	out[328] = 0;
	out[329] = 0;
	out[330] = 0;
	out[331] = 0;
	out[332] = 0;
	out[333] = 0;
	out[334] = 0;
	out[335] = 0;
	out[336] = 0;
	out[337] = 0;
	out[338] = 0;
	out[339] = 0;
	out[340] = 1;
	out[341] = 0;
	out[342] = 0;
	out[343] = 0;
	out[344] = 0;
	out[345] = 0;
	out[346] = 0;
	out[347] = 0;
	out[348] = 0;
	out[349] = 0;
	out[350] = 0;
	out[351] = 0;
	out[352] = 0;
	out[353] = 0;
	out[354] = 0;
	out[355] = 0;
	out[356] = 0;
	out[357] = 0;
	out[358] = 0;
	out[359] = 0;
	out[360] = 1;
}

static inline void gen_quatrotatevector(FLT* out, const FLT* q, const FLT* pt) {
	const GEN_FLT obj_qw = q[0];
	const GEN_FLT obj_qi = q[1];
	const GEN_FLT obj_qj = q[2];
	const GEN_FLT obj_qk = q[3];
	const GEN_FLT pt_x = pt[0];
	const GEN_FLT pt_y = pt[1];
	const GEN_FLT pt_z = pt[2];
	const GEN_FLT x0 = (pt_x * obj_qk) + (-1 * pt_z * obj_qi) + (pt_y * obj_qw);
	const GEN_FLT x1 = (pt_y * obj_qi) + (-1 * pt_x * obj_qj) + (pt_z * obj_qw);
	const GEN_FLT x2 = (pt_z * obj_qj) + (-1 * pt_y * obj_qk) + (pt_x * obj_qw);
	out[0] = pt_x + (2 * ((x1 * obj_qj) + (-1 * x0 * obj_qk)));
	out[1] = pt_y + (2 * ((x2 * obj_qk) + (-1 * x1 * obj_qi)));
	out[2] = pt_z + (2 * ((x0 * obj_qi) + (-1 * x2 * obj_qj)));
}

// Jacobian of quatrotatevector wrt [obj_qw, obj_qi, obj_qj, obj_qk]
static inline void gen_quatrotatevector_jac_q(FLT* out, const FLT* q, const FLT* pt) {
	const GEN_FLT obj_qw = q[0];
	const GEN_FLT obj_qi = q[1];
	const GEN_FLT obj_qj = q[2];
	const GEN_FLT obj_qk = q[3];
	const GEN_FLT pt_x = pt[0];
	const GEN_FLT pt_y = pt[1];
	const GEN_FLT pt_z = pt[2];
	const GEN_FLT x0 = 2 * pt_y;
	const GEN_FLT x1 = x0 * obj_qk;
	const GEN_FLT x2 = 2 * pt_z;
	const GEN_FLT x3 = x2 * obj_qj;
	const GEN_FLT x4 = x2 * obj_qk;
	const GEN_FLT x5 = x0 * obj_qj;
	const GEN_FLT x6 = 2 * obj_qi;
	const GEN_FLT x7 = x6 * pt_y;
	const GEN_FLT x8 = pt_x * obj_qj;
	const GEN_FLT x9 = 2 * obj_qw;
	const GEN_FLT x10 = x9 * pt_z;
	const GEN_FLT x11 = pt_x * obj_qk;
	const GEN_FLT x12 = x6 * pt_z;
	const GEN_FLT x13 = x9 * pt_y;
	const GEN_FLT x14 = 2 * x11;
	const GEN_FLT x15 = 4 * pt_y;
	const GEN_FLT x16 = 2 * x8;
	const GEN_FLT x17 = x6 * pt_x;
	const GEN_FLT x18 = x9 * pt_x;
	const GEN_FLT x19 = 4 * pt_z;
	out[0] = x3 + (-1 * x1);
	out[1] = x5 + x4;
	out[2] = x10 + (-4 * x8) + x7;
	out[3] = (-1 * x13) + x12 + (-4 * x11);
	out[4] = x14 + (-1 * x12);
	out[5] = (-1 * x10) + x16 + (-1 * x15 * obj_qi);
	out[6] = x4 + x17;
	out[7] = x18 + (-1 * x15 * obj_qk) + x3;
	out[8] = x7 + (-1 * x16);
	out[9] = x13 + (-1 * x19 * obj_qi) + x14;
	out[10] = (-1 * x18) + x1 + (-1 * x19 * obj_qj);
	out[11] = x17 + x5;
}

// Jacobian of quatrotatevector wrt [pt_x, pt_y, pt_z]
static inline void gen_quatrotatevector_jac_pt(FLT* out, const FLT* q, const FLT* pt) {
	const GEN_FLT obj_qw = q[0];
	const GEN_FLT obj_qi = q[1];
	const GEN_FLT obj_qj = q[2];
	const GEN_FLT obj_qk = q[3];
	const GEN_FLT pt_x = pt[0];
	const GEN_FLT pt_y = pt[1];
	const GEN_FLT pt_z = pt[2];
	const GEN_FLT x0 = -2 * (obj_qk * obj_qk);
	const GEN_FLT x1 = 1 + (-2 * (obj_qj * obj_qj));
	const GEN_FLT x2 = 2 * obj_qw;
	const GEN_FLT x3 = x2 * obj_qk;
	const GEN_FLT x4 = 2 * obj_qi;
	const GEN_FLT x5 = x4 * obj_qj;
	const GEN_FLT x6 = x4 * obj_qk;
	const GEN_FLT x7 = x2 * obj_qj;
	const GEN_FLT x8 = -2 * (obj_qi * obj_qi);
	const GEN_FLT x9 = x2 * obj_qi;
	const GEN_FLT x10 = 2 * obj_qk * obj_qj;
	out[0] = x1 + x0;
	out[1] = x5 + (-1 * x3);
	out[2] = x7 + x6;
	out[3] = x3 + x5;
	out[4] = 1 + x0 + x8;
	out[5] = x10 + (-1 * x9);
	out[6] = x6 + (-1 * x7);
	out[7] = x9 + x10;
	out[8] = x1 + x8;
}

static inline void gen_imu_rot_f_aa(FLT* out, const FLT time, const FLT* imu_rot_aa) {
	const GEN_FLT aa_x = imu_rot_aa[0];
	const GEN_FLT aa_y = imu_rot_aa[1];
	const GEN_FLT aa_z = imu_rot_aa[2];
	const GEN_FLT lh_qi = imu_rot_aa[3];
	const GEN_FLT lh_qj = imu_rot_aa[4];
	const GEN_FLT lh_qk = imu_rot_aa[5];
	const GEN_FLT x0 = aa_z * aa_z;
	const GEN_FLT x1 = aa_y * aa_y;
	const GEN_FLT x2 = aa_x * aa_x;
	const GEN_FLT x3 = 1e-10 + x2 + x1 + x0;
	const GEN_FLT x4 = sqrt(x3);
	const GEN_FLT x5 = 0.5 * x4;
	const GEN_FLT x6 = sin(x5);
	const GEN_FLT x7 = (1. / x4) * x6;
	const GEN_FLT x8 = time * time;
	const GEN_FLT x9 = x8 * (lh_qk * lh_qk);
	const GEN_FLT x10 = x8 * (lh_qj * lh_qj);
	const GEN_FLT x11 = x8 * (lh_qi * lh_qi);
	const GEN_FLT x12 = 1e-10 + x11 + x10 + x9;
	const GEN_FLT x13 = sqrt(x12);
	const GEN_FLT x14 = 0.5 * x13;
	const GEN_FLT x15 = sin(x14);
	const GEN_FLT x16 = (x15 * x15) * (1. / x12);
	const GEN_FLT x17 = cos(x14);
	const GEN_FLT x18 = (1. / x3) * (x6 * x6);
	const GEN_FLT x19 = cos(x5);
	const GEN_FLT x20 = (1. / sqrt(1e-11 + (x19 * x19) + (x0 * x18) + (x2 * x18) + (x1 * x18))) * (1. / sqrt(1e-11 + (x17 * x17) + (x11 * x16) + (x10 * x16) + (x9 * x16)));
	const GEN_FLT x21 = x20 * x15 * (1. / x13) * time;
	const GEN_FLT x22 = x7 * x21;
	const GEN_FLT x23 = x22 * aa_y;
	const GEN_FLT x24 = x22 * aa_z;
	const GEN_FLT x25 = x21 * x19;
	const GEN_FLT x26 = x20 * x17;
	const GEN_FLT x27 = x7 * x26;
	const GEN_FLT x28 = (x25 * lh_qi) + (x24 * lh_qj) + (x27 * aa_x) + (-1 * x23 * lh_qk);
	const GEN_FLT x29 = x22 * aa_x;
	const GEN_FLT x30 = (x27 * aa_y) + (x25 * lh_qj) + (-1 * x24 * lh_qi) + (x29 * lh_qk);
	const GEN_FLT x31 = (-1 * x29 * lh_qi) + (x26 * x19) + (-1 * x23 * lh_qj) + (-1 * x24 * lh_qk);
	const GEN_FLT x32 = 1e-10 + (x31 * x31) + (x28 * x28) + (x30 * x30);
	const GEN_FLT x33 = 2 * (1. / x32) * atan2(x32, x31);
	out[0] = x33 * x28;
	out[1] = x30 * x33;
	out[2] = x33 * ((x27 * aa_z) + (x23 * lh_qi) + (-1 * x29 * lh_qj) + (x25 * lh_qk));
	out[3] = lh_qi;
	out[4] = lh_qj;
	out[5] = lh_qk;
}

// Jacobian of imu_rot_f_aa wrt [time]
static inline void gen_imu_rot_f_aa_jac_time(FLT* out, const FLT time, const FLT* imu_rot_aa) {
	const GEN_FLT aa_x = imu_rot_aa[0];
	const GEN_FLT aa_y = imu_rot_aa[1];
	const GEN_FLT aa_z = imu_rot_aa[2];
	const GEN_FLT lh_qi = imu_rot_aa[3];
	const GEN_FLT lh_qj = imu_rot_aa[4];
	const GEN_FLT lh_qk = imu_rot_aa[5];
	const GEN_FLT x0 = time * time;
	const GEN_FLT x1 = lh_qk * lh_qk;
	const GEN_FLT x2 = x0 * x1;
	const GEN_FLT x3 = lh_qj * lh_qj;
	const GEN_FLT x4 = x0 * x3;
	const GEN_FLT x5 = lh_qi * lh_qi;
	const GEN_FLT x6 = x0 * x5;
	const GEN_FLT x7 = 1e-10 + x6 + x4 + x2;
	const GEN_FLT x8 = sqrt(x7);
	const GEN_FLT x9 = 0.5 * x8;
	const GEN_FLT x10 = sin(x9);
	const GEN_FLT x11 = (1. / x8) * x10;
	const GEN_FLT x12 = x11 * lh_qk;
	const GEN_FLT x13 = x10 * x10;
	const GEN_FLT x14 = 1. / x7;
	const GEN_FLT x15 = x14 * x13;
	const GEN_FLT x16 = cos(x9);
	const GEN_FLT x17 = 1e-11 + (x6 * x15) + (x16 * x16) + (x4 * x15) + (x2 * x15);
	const GEN_FLT x18 = aa_y * aa_y;
	const GEN_FLT x19 = aa_z * aa_z;
	const GEN_FLT x20 = aa_x * aa_x;
	const GEN_FLT x21 = 1e-10 + x20 + x18 + x19;
	const GEN_FLT x22 = sqrt(x21);
	const GEN_FLT x23 = 0.5 * x22;
	const GEN_FLT x24 = sin(x23);
	const GEN_FLT x25 = (x24 * x24) * (1. / x21);
	const GEN_FLT x26 = cos(x23);
	const GEN_FLT x27 = 1. / sqrt(1e-11 + (x26 * x26) + (x25 * x19) + (x25 * x20) + (x25 * x18));
	const GEN_FLT x28 = x27 * (1. / sqrt(x17));
	const GEN_FLT x29 = x24 * (1. / x22);
	const GEN_FLT x30 = x28 * x29;
	const GEN_FLT x31 = x30 * aa_y;
	const GEN_FLT x32 = x31 * x12;
	const GEN_FLT x33 = x30 * aa_z;
	const GEN_FLT x34 = x11 * lh_qj;
	const GEN_FLT x35 = x34 * x33;
	const GEN_FLT x36 = x28 * x26;
	const GEN_FLT x37 = x36 * x11;
	const GEN_FLT x38 = x37 * lh_qi;
	const GEN_FLT x39 = x30 * x16;
	const GEN_FLT x40 = (x39 * aa_x) + (x38 * time) + (x35 * time) + (-1 * x32 * time);
	const GEN_FLT x41 = x30 * aa_x;
	const GEN_FLT x42 = x41 * x12;
	const GEN_FLT x43 = x11 * lh_qi;
	const GEN_FLT x44 = x43 * x33;
	const GEN_FLT x45 = x37 * lh_qj;
	const GEN_FLT x46 = (x39 * aa_y) + (x45 * time) + (-1 * x44 * time) + (x42 * time);
	const GEN_FLT x47 = x33 * x12;
	const GEN_FLT x48 = x31 * x34;
	const GEN_FLT x49 = x41 * x43;
	const GEN_FLT x50 = x26 * x16;
	const GEN_FLT x51 = x50 * x28;
	const GEN_FLT x52 = x51 + (-1 * x49 * time) + (-1 * x48 * time) + (-1 * x47 * time);
	const GEN_FLT x53 = x52 * x52;
	const GEN_FLT x54 = 1e-10 + x53 + (x40 * x40) + (x46 * x46);
	const GEN_FLT x55 = 1. / x54;
	const GEN_FLT x56 = 2 * time;
	const GEN_FLT x57 = x5 * x56;
	const GEN_FLT x58 = x3 * x56;
	const GEN_FLT x59 = x1 * x56;
	const GEN_FLT x60 = x59 + x58 + x57;
	const GEN_FLT x61 = x60 * x16;
	const GEN_FLT x62 = 0.25 * x61;
	const GEN_FLT x63 = x62 * x41;
	const GEN_FLT x64 = time * lh_qi;
	const GEN_FLT x65 = x64 * x14;
	const GEN_FLT x66 = x12 * time;
	const GEN_FLT x67 = 0.5 * x61;
	const GEN_FLT x68 = (1. / (x7 * sqrt(x7))) * x10;
	const GEN_FLT x69 = x67 * x68;
	const GEN_FLT x70 = x4 * x60;
	const GEN_FLT x71 = (1. / (x7 * x7)) * x13;
	const GEN_FLT x72 = x71 * x60;
	const GEN_FLT x73 = 1.0/2.0 * x27 * (1. / (x17 * sqrt(x17))) * ((-1 * x2 * x72) + (-1 * x6 * x72) + (0.5 * x70 * x68 * x16) + (-1 * x71 * x70) + (x58 * x15) + (x59 * x15) + (x57 * x15) + (x2 * x69) + (x6 * x69) + (-1 * x67 * x11));
	const GEN_FLT x74 = x73 * x29;
	const GEN_FLT x75 = x74 * aa_z;
	const GEN_FLT x76 = time * lh_qj;
	const GEN_FLT x77 = x62 * x31;
	const GEN_FLT x78 = x77 * x14;
	const GEN_FLT x79 = time * lh_qk;
	const GEN_FLT x80 = 1.0/2.0 * x60 * x68;
	const GEN_FLT x81 = x80 * x79;
	const GEN_FLT x82 = x79 * x14;
	const GEN_FLT x83 = x62 * x33;
	const GEN_FLT x84 = 0.25 * x60;
	const GEN_FLT x85 = x43 * time;
	const GEN_FLT x86 = x74 * aa_x;
	const GEN_FLT x87 = x74 * aa_y;
	const GEN_FLT x88 = x34 * time;
	const GEN_FLT x89 = x80 * x64;
	const GEN_FLT x90 = x80 * x76;
	const GEN_FLT x91 = (-1 * x48) + (x90 * x31) + (-1 * x63 * x65) + (-1 * x82 * x83) + (x89 * x41) + (x75 * x66) + (-1 * x49) + (x81 * x33) + (-1 * x73 * x50) + (x88 * x87) + (x85 * x86) + (-1 * x47) + (-1 * x78 * x76) + (-1 * x84 * x37);
	const GEN_FLT x92 = x74 * x16;
	const GEN_FLT x93 = x84 * x51;
	const GEN_FLT x94 = x93 * x14;
	const GEN_FLT x95 = x80 * x36;
	const GEN_FLT x96 = x84 * x11;
	const GEN_FLT x97 = x76 * x14;
	const GEN_FLT x98 = x73 * x26;
	const GEN_FLT x99 = x98 * time;
	const GEN_FLT x100 = 2 * ((-1 * x99 * x43) + (-1 * x88 * x75) + x35 + (x83 * x97) + (x64 * x94) + (x81 * x31) + x38 + (-1 * x32) + (-1 * x92 * aa_x) + (-1 * x64 * x95) + (-1 * x96 * x41) + (x87 * x66) + (-1 * x82 * x77) + (-1 * x90 * x33));
	const GEN_FLT x101 = 2 * ((x82 * x63) + (-1 * x44) + (-1 * x81 * x41) + (-1 * x92 * aa_y) + (-1 * x99 * x34) + (x76 * x94) + (-1 * x83 * x65) + (-1 * x96 * x31) + (-1 * x86 * x66) + x42 + (-1 * x76 * x95) + (x89 * x33) + (x85 * x75) + x45);
	const GEN_FLT x102 = (x46 * x101) + (x40 * x100) + (2 * x52 * x91);
	const GEN_FLT x103 = x54 * x54;
	const GEN_FLT x104 = x53 * x55 * (1. / (x53 + x103)) * (((1. / x52) * x102) + (-1 * x54 * (1. / x53) * x91));
	const GEN_FLT x105 = 2 * x104;
	const GEN_FLT x106 = atan2(x54, x52);
	const GEN_FLT x107 = x55 * x106;
	const GEN_FLT x108 = (1. / x103) * x102 * x106;
	const GEN_FLT x109 = 2 * x108;
	const GEN_FLT x110 = x36 * x12;
	const GEN_FLT x111 = x41 * x34;
	const GEN_FLT x112 = x43 * x31;
	const GEN_FLT x113 = 2 * ((x39 * aa_z) + (time * x112) + (-1 * time * x111) + (time * x110));
	out[0] = (-1 * x40 * x109) + (x100 * x107) + (x40 * x105);
	out[1] = (-1 * x46 * x109) + (x101 * x107) + (x46 * x105);
	out[2] = (2 * x107 * ((-1 * x85 * x87) + (-1 * x89 * x31) + (-1 * x66 * x98) + (-1 * x96 * x33) + (-1 * x92 * aa_z) + (x82 * x93) + x112 + (x78 * x64) + (-1 * x79 * x95) + x110 + (x88 * x86) + (-1 * x63 * x97) + (x90 * x41) + (-1 * x111))) + (-1 * x108 * x113) + (x104 * x113);
	out[3] = 0;
	out[4] = 0;
	out[5] = 0;
}

// Jacobian of imu_rot_f_aa wrt [aa_x, aa_y, aa_z, lh_qi, lh_qj, lh_qk]
static inline void gen_imu_rot_f_aa_jac_imu_rot_aa(FLT* out, const FLT time, const FLT* imu_rot_aa) {
	const GEN_FLT aa_x = imu_rot_aa[0];
	const GEN_FLT aa_y = imu_rot_aa[1];
	const GEN_FLT aa_z = imu_rot_aa[2];
	const GEN_FLT lh_qi = imu_rot_aa[3];
	const GEN_FLT lh_qj = imu_rot_aa[4];
	const GEN_FLT lh_qk = imu_rot_aa[5];
	const GEN_FLT x0 = time * time;
	const GEN_FLT x1 = lh_qk * lh_qk;
	const GEN_FLT x2 = x0 * x1;
	const GEN_FLT x3 = lh_qj * lh_qj;
	const GEN_FLT x4 = x0 * x3;
	const GEN_FLT x5 = lh_qi * lh_qi;
	const GEN_FLT x6 = x0 * x5;
	const GEN_FLT x7 = 1e-10 + x6 + x4 + x2;
	const GEN_FLT x8 = sqrt(x7);
	const GEN_FLT x9 = 0.5 * x8;
	const GEN_FLT x10 = sin(x9);
	const GEN_FLT x11 = x10 * x10;
	const GEN_FLT x12 = 1. / x7;
	const GEN_FLT x13 = x12 * x11;
	const GEN_FLT x14 = cos(x9);
	const GEN_FLT x15 = 1e-11 + (x14 * x14) + (x4 * x13) + (x6 * x13) + (x2 * x13);
	const GEN_FLT x16 = 1. / sqrt(x15);
	const GEN_FLT x17 = aa_z * aa_z;
	const GEN_FLT x18 = aa_y * aa_y;
	const GEN_FLT x19 = aa_x * aa_x;
	const GEN_FLT x20 = 1e-10 + x19 + x18 + x17;
	const GEN_FLT x21 = sqrt(x20);
	const GEN_FLT x22 = 0.5 * x21;
	const GEN_FLT x23 = sin(x22);
	const GEN_FLT x24 = x23 * (1. / x21);
	const GEN_FLT x25 = x24 * x16;
	const GEN_FLT x26 = 1. / x20;
	const GEN_FLT x27 = x23 * x23;
	const GEN_FLT x28 = x26 * x27;
	const GEN_FLT x29 = cos(x22);
	const GEN_FLT x30 = 1e-11 + (x29 * x29) + (x28 * x17) + (x28 * x19) + (x28 * x18);
	const GEN_FLT x31 = 1. / sqrt(x30);
	const GEN_FLT x32 = (1. / x8) * x10;
	const GEN_FLT x33 = x32 * lh_qi;
	const GEN_FLT x34 = x33 * time;
	const GEN_FLT x35 = x31 * x34;
	const GEN_FLT x36 = x35 * x25;
	const GEN_FLT x37 = -1 * x36;
	const GEN_FLT x38 = x31 * x14;
	const GEN_FLT x39 = x38 * x16;
	const GEN_FLT x40 = x39 * x24;
	const GEN_FLT x41 = x40 * aa_x;
	const GEN_FLT x42 = 0.5 * x41;
	const GEN_FLT x43 = 2 * (1. / (x20 * x20)) * x27;
	const GEN_FLT x44 = x43 * aa_x;
	const GEN_FLT x45 = 1.0 * x29;
	const GEN_FLT x46 = x23 * (1. / (x20 * sqrt(x20)));
	const GEN_FLT x47 = x45 * x46;
	const GEN_FLT x48 = x47 * x17;
	const GEN_FLT x49 = 2 * x28;
	const GEN_FLT x50 = x45 * x24;
	const GEN_FLT x51 = aa_x * aa_x * aa_x;
	const GEN_FLT x52 = x47 * x18;
	const GEN_FLT x53 = (-1 * x44 * x18) + (-1 * x51 * x43) + (x51 * x47) + (x52 * aa_x) + (-1 * x50 * aa_x) + (x49 * aa_x) + (x48 * aa_x) + (-1 * x44 * x17);
	const GEN_FLT x54 = x29 * x16;
	const GEN_FLT x55 = 1.0/2.0 * (1. / (x30 * sqrt(x30)));
	const GEN_FLT x56 = x55 * x14;
	const GEN_FLT x57 = x54 * x56;
	const GEN_FLT x58 = x53 * x55;
	const GEN_FLT x59 = x25 * aa_z;
	const GEN_FLT x60 = x32 * time;
	const GEN_FLT x61 = x60 * lh_qk;
	const GEN_FLT x62 = x61 * x59;
	const GEN_FLT x63 = aa_x * aa_z;
	const GEN_FLT x64 = x54 * x31;
	const GEN_FLT x65 = x60 * x64;
	const GEN_FLT x66 = x65 * lh_qk;
	const GEN_FLT x67 = 0.5 * x26;
	const GEN_FLT x68 = x67 * x66;
	const GEN_FLT x69 = x63 * x68;
	const GEN_FLT x70 = x60 * x31;
	const GEN_FLT x71 = x70 * lh_qk;
	const GEN_FLT x72 = x46 * x16;
	const GEN_FLT x73 = x71 * x72;
	const GEN_FLT x74 = x73 * x63;
	const GEN_FLT x75 = x60 * lh_qj;
	const GEN_FLT x76 = x25 * aa_y;
	const GEN_FLT x77 = x76 * x58;
	const GEN_FLT x78 = x72 * x19;
	const GEN_FLT x79 = x25 * aa_x;
	const GEN_FLT x80 = x79 * x34;
	const GEN_FLT x81 = x64 * x34;
	const GEN_FLT x82 = x81 * x67;
	const GEN_FLT x83 = aa_x * aa_y;
	const GEN_FLT x84 = x65 * lh_qj;
	const GEN_FLT x85 = x84 * x67;
	const GEN_FLT x86 = x70 * lh_qj;
	const GEN_FLT x87 = x86 * x72;
	const GEN_FLT x88 = (x83 * x87) + (-1 * x83 * x85);
	const GEN_FLT x89 = x37 + (x78 * x35) + (-1 * x42) + (-1 * x53 * x57) + (x62 * x58) + (-1 * x69) + x88 + x74 + (x75 * x77) + (-1 * x82 * x19) + (x80 * x58);
	const GEN_FLT x90 = x70 * x79;
	const GEN_FLT x91 = x90 * lh_qk;
	const GEN_FLT x92 = x59 * x35;
	const GEN_FLT x93 = x40 * aa_y;
	const GEN_FLT x94 = x93 + x84 + (-1 * x92) + x91;
	const GEN_FLT x95 = x70 * x25;
	const GEN_FLT x96 = x95 * aa_y;
	const GEN_FLT x97 = x96 * lh_qk;
	const GEN_FLT x98 = x95 * aa_z;
	const GEN_FLT x99 = x98 * lh_qj;
	const GEN_FLT x100 = x41 + x81 + x99 + (-1 * x97);
	const GEN_FLT x101 = x98 * lh_qk;
	const GEN_FLT x102 = x96 * lh_qj;
	const GEN_FLT x103 = x79 * x35;
	const GEN_FLT x104 = x54 * x38;
	const GEN_FLT x105 = x104 + (-1 * x103) + (-1 * x102) + (-1 * x101);
	const GEN_FLT x106 = x105 * x105;
	const GEN_FLT x107 = 1e-10 + x106 + (x100 * x100) + (x94 * x94);
	const GEN_FLT x108 = x107 * (1. / x106);
	const GEN_FLT x109 = 2 * x105;
	const GEN_FLT x110 = x46 * x39;
	const GEN_FLT x111 = x54 * x55;
	const GEN_FLT x112 = x34 * x111;
	const GEN_FLT x113 = x83 * x68;
	const GEN_FLT x114 = x85 * x63;
	const GEN_FLT x115 = x83 * x73;
	const GEN_FLT x116 = x75 * x59;
	const GEN_FLT x117 = x87 * x63;
	const GEN_FLT x118 = x53 * x56;
	const GEN_FLT x119 = 0.5 * x104;
	const GEN_FLT x120 = x26 * x119;
	const GEN_FLT x121 = (x19 * x120) + (-1 * x79 * x118) + x40 + (-1 * x19 * x110) + (-0.5 * x103) + (-1 * x53 * x112) + (x77 * x61) + (-1 * x113) + x115 + x114 + (-1 * x58 * x116) + (-1 * x117);
	const GEN_FLT x122 = 2 * x100;
	const GEN_FLT x123 = x79 * x61;
	const GEN_FLT x124 = x95 * lh_qk;
	const GEN_FLT x125 = x60 * x111;
	const GEN_FLT x126 = x125 * lh_qj;
	const GEN_FLT x127 = x90 * lh_qj;
	const GEN_FLT x128 = x72 * x35;
	const GEN_FLT x129 = (x63 * x128) + (-1 * x82 * x63);
	const GEN_FLT x130 = (-1 * x83 * x110) + (x83 * x120);
	const GEN_FLT x131 = x129 + (-1 * x76 * x118) + (-0.5 * x127) + (x58 * x59 * x34) + (-1 * x53 * x126) + x124 + (x68 * x19) + x130 + (-1 * x71 * x78) + (-1 * x58 * x123);
	const GEN_FLT x132 = 2 * x94;
	const GEN_FLT x133 = (x131 * x132) + (x122 * x121) + (x89 * x109);
	const GEN_FLT x134 = 1. / x105;
	const GEN_FLT x135 = (x133 * x134) + (-1 * x89 * x108);
	const GEN_FLT x136 = 1. / x107;
	const GEN_FLT x137 = x107 * x107;
	const GEN_FLT x138 = (1. / (x106 + x137)) * x106 * x136;
	const GEN_FLT x139 = x122 * x138;
	const GEN_FLT x140 = atan2(x107, x105);
	const GEN_FLT x141 = 2 * x140;
	const GEN_FLT x142 = x136 * x141;
	const GEN_FLT x143 = 1. / x137;
	const GEN_FLT x144 = x140 * x143;
	const GEN_FLT x145 = x122 * x144;
	const GEN_FLT x146 = x95 * lh_qj;
	const GEN_FLT x147 = -1 * x146;
	const GEN_FLT x148 = 0.5 * x93;
	const GEN_FLT x149 = x43 * aa_y;
	const GEN_FLT x150 = x47 * x19;
	const GEN_FLT x151 = aa_y * aa_y * aa_y;
	const GEN_FLT x152 = (-1 * x43 * x151) + (-1 * x17 * x149) + (x47 * x151) + (x48 * aa_y) + (x49 * aa_y) + (x150 * aa_y) + (-1 * x19 * x149) + (-1 * x50 * aa_y);
	const GEN_FLT x153 = x55 * x152;
	const GEN_FLT x154 = x59 * x153;
	const GEN_FLT x155 = x67 * x18;
	const GEN_FLT x156 = x76 * x153;
	const GEN_FLT x157 = x72 * x18;
	const GEN_FLT x158 = x82 * x83;
	const GEN_FLT x159 = x83 * x128;
	const GEN_FLT x160 = aa_y * aa_z;
	const GEN_FLT x161 = (x73 * x160) + (-1 * x68 * x160);
	const GEN_FLT x162 = x161 + x147 + (x61 * x154) + (-1 * x148) + (-1 * x84 * x155) + (x86 * x157) + x159 + (x75 * x156) + (-1 * x158) + (-1 * x57 * x152) + (x80 * x153);
	const GEN_FLT x163 = -1 * x124;
	const GEN_FLT x164 = x87 * x160;
	const GEN_FLT x165 = x85 * x160;
	const GEN_FLT x166 = x76 * x35;
	const GEN_FLT x167 = x56 * x152;
	const GEN_FLT x168 = x130 + (-1 * x164) + (x71 * x157) + (-1 * x79 * x167) + x163 + (-1 * x66 * x155) + (-1 * x116 * x153) + (x61 * x156) + (-0.5 * x166) + x165 + (-1 * x112 * x152);
	const GEN_FLT x169 = x82 * x160;
	const GEN_FLT x170 = x128 * x160;
	const GEN_FLT x171 = (-1 * x76 * x167) + x113 + (x34 * x154) + (-1 * x18 * x110) + (x18 * x120) + (-1 * x115) + (-1 * x169) + (-0.5 * x102) + x170 + x40 + (-1 * x123 * x153) + (-1 * x126 * x152);
	const GEN_FLT x172 = (x171 * x132) + (x122 * x168) + (x109 * x162);
	const GEN_FLT x173 = (x172 * x134) + (-1 * x108 * x162);
	const GEN_FLT x174 = aa_z * aa_z * aa_z;
	const GEN_FLT x175 = x43 * aa_z;
	const GEN_FLT x176 = (x52 * aa_z) + (-1 * x19 * x175) + (x47 * x174) + (-1 * x18 * x175) + (x150 * aa_z) + (-1 * x43 * x174) + (x49 * aa_z) + (-1 * x50 * aa_z);
	const GEN_FLT x177 = x55 * x176;
	const GEN_FLT x178 = x76 * x177;
	const GEN_FLT x179 = x72 * x17;
	const GEN_FLT x180 = x40 * aa_z;
	const GEN_FLT x181 = 0.5 * x180;
	const GEN_FLT x182 = x34 * x177;
	const GEN_FLT x183 = x129 + (-1 * x57 * x176) + (x75 * x178) + x163 + (-1 * x68 * x17) + (-1 * x165) + (x62 * x177) + x164 + (-1 * x181) + (x71 * x179) + (x79 * x182);
	const GEN_FLT x184 = x56 * x176;
	const GEN_FLT x185 = x110 * aa_z;
	const GEN_FLT x186 = x120 * aa_z;
	const GEN_FLT x187 = (x186 * aa_x) + (-1 * x185 * aa_x);
	const GEN_FLT x188 = x161 + (-1 * x112 * x176) + (-1 * x86 * x179) + (-0.5 * x92) + x187 + (x85 * x17) + (x61 * x178) + (-1 * x116 * x177) + (-1 * x79 * x184) + x146;
	const GEN_FLT x189 = (x186 * aa_y) + (-1 * x185 * aa_y);
	const GEN_FLT x190 = x189 + (-1 * x123 * x177) + (x59 * x182) + (-1 * x126 * x176) + (x35 * x179) + x69 + (-1 * x82 * x17) + (-0.5 * x99) + x37 + (-1 * x74) + (-1 * x76 * x184);
	const GEN_FLT x191 = (x190 * x132) + (x122 * x188) + (x109 * x183);
	const GEN_FLT x192 = (x191 * x134) + (-1 * x108 * x183);
	const GEN_FLT x193 = x191 * x144;
	const GEN_FLT x194 = x0 * x33;
	const GEN_FLT x195 = 0.5 * x64;
	const GEN_FLT x196 = lh_qi * lh_qi * lh_qi;
	const GEN_FLT x197 = time * time * time * time;
	const GEN_FLT x198 = 1.0 * x14;
	const GEN_FLT x199 = (1. / (x7 * sqrt(x7))) * x10;
	const GEN_FLT x200 = x198 * x199;
	const GEN_FLT x201 = x200 * x197;
	const GEN_FLT x202 = 2 * (1. / (x7 * x7)) * x11;
	const GEN_FLT x203 = x202 * x197;
	const GEN_FLT x204 = 2 * x13;
	const GEN_FLT x205 = x0 * x204;
	const GEN_FLT x206 = x3 * x203;
	const GEN_FLT x207 = x3 * x201;
	const GEN_FLT x208 = x1 * x201;
	const GEN_FLT x209 = x1 * x203;
	const GEN_FLT x210 = (x208 * lh_qi) + (x207 * lh_qi) + (-1 * x206 * lh_qi) + (-1 * x198 * x194) + (x205 * lh_qi) + (-1 * x209 * lh_qi) + (-1 * x203 * x196) + (x201 * x196);
	const GEN_FLT x211 = 1.0/2.0 * (1. / (x15 * sqrt(x15)));
	const GEN_FLT x212 = x38 * x211;
	const GEN_FLT x213 = x29 * x212;
	const GEN_FLT x214 = time * time * time;
	const GEN_FLT x215 = x31 * x199;
	const GEN_FLT x216 = x215 * x214;
	const GEN_FLT x217 = x5 * x216;
	const GEN_FLT x218 = x24 * x211;
	const GEN_FLT x219 = x86 * x218;
	const GEN_FLT x220 = x210 * x219;
	const GEN_FLT x221 = lh_qj * lh_qi;
	const GEN_FLT x222 = x76 * x216;
	const GEN_FLT x223 = x221 * x222;
	const GEN_FLT x224 = x71 * x218;
	const GEN_FLT x225 = x210 * x224;
	const GEN_FLT x226 = x12 * x214;
	const GEN_FLT x227 = x226 * x148;
	const GEN_FLT x228 = x221 * x227;
	const GEN_FLT x229 = -1 * x90;
	const GEN_FLT x230 = x218 * aa_x;
	const GEN_FLT x231 = x35 * x230;
	const GEN_FLT x232 = x42 * x226;
	const GEN_FLT x233 = x59 * x216;
	const GEN_FLT x234 = lh_qk * lh_qi;
	const GEN_FLT x235 = x226 * x181;
	const GEN_FLT x236 = (-1 * x234 * x235) + (x234 * x233);
	const GEN_FLT x237 = (-1 * x194 * x195) + x229 + (x220 * aa_y) + x223 + x236 + (-1 * x5 * x232) + (-1 * x210 * x213) + (-1 * x228) + (x79 * x217) + (x225 * aa_z) + (x210 * x231);
	const GEN_FLT x238 = x234 * x222;
	const GEN_FLT x239 = x24 * x212;
	const GEN_FLT x240 = x210 * x239;
	const GEN_FLT x241 = x64 * x199;
	const GEN_FLT x242 = x214 * x241;
	const GEN_FLT x243 = x234 * x227;
	const GEN_FLT x244 = x235 * x221;
	const GEN_FLT x245 = x218 * aa_z;
	const GEN_FLT x246 = x86 * x245;
	const GEN_FLT x247 = 0.5 * x31;
	const GEN_FLT x248 = x79 * x247;
	const GEN_FLT x249 = x233 * x221;
	const GEN_FLT x250 = x29 * x211;
	const GEN_FLT x251 = x210 * x250;
	const GEN_FLT x252 = x12 * x119;
	const GEN_FLT x253 = x214 * x252;
	const GEN_FLT x254 = (x5 * x253) + (-1 * x35 * x251) + x238 + (x225 * aa_y) + (-1 * x240 * aa_x) + (-1 * x5 * x242) + x244 + (-1 * x249) + (-1 * x243) + x65 + (-1 * x210 * x246) + (-1 * x248 * x194);
	const GEN_FLT x255 = x76 * x247;
	const GEN_FLT x256 = x79 * x216;
	const GEN_FLT x257 = x234 * x256;
	const GEN_FLT x258 = x234 * x232;
	const GEN_FLT x259 = -1 * x98;
	const GEN_FLT x260 = (x253 * x221) + (-1 * x221 * x242);
	const GEN_FLT x261 = x260 + (-1 * x255 * x194) + x258 + (-1 * x240 * aa_y) + (-1 * x257) + (-1 * x225 * aa_x) + x259 + (x5 * x233) + (-1 * x86 * x251) + (-1 * x5 * x235) + (x35 * x210 * x245);
	const GEN_FLT x262 = (x261 * x132) + (x254 * x122) + (x237 * x109);
	const GEN_FLT x263 = (x262 * x134) + (-1 * x237 * x108);
	const GEN_FLT x264 = x262 * x144;
	const GEN_FLT x265 = x0 * lh_qj;
	const GEN_FLT x266 = x32 * x198;
	const GEN_FLT x267 = x5 * x201;
	const GEN_FLT x268 = x5 * x203;
	const GEN_FLT x269 = x197 * (lh_qj * lh_qj * lh_qj);
	const GEN_FLT x270 = (-1 * x209 * lh_qj) + (x208 * lh_qj) + (-1 * x202 * x269) + (x200 * x269) + (x204 * x265) + (-1 * x268 * lh_qj) + (x267 * lh_qj) + (-1 * x266 * x265);
	const GEN_FLT x271 = x3 * x214;
	const GEN_FLT x272 = x12 * x271;
	const GEN_FLT x273 = lh_qk * lh_qj;
	const GEN_FLT x274 = x235 * x273;
	const GEN_FLT x275 = x215 * x271;
	const GEN_FLT x276 = x219 * aa_y;
	const GEN_FLT x277 = -1 * x96;
	const GEN_FLT x278 = x233 * x273;
	const GEN_FLT x279 = x32 * x195;
	const GEN_FLT x280 = x35 * x270;
	const GEN_FLT x281 = (-1 * x232 * x221) + (x256 * x221);
	const GEN_FLT x282 = (-1 * x213 * x270) + (-1 * x272 * x148) + (x270 * x224 * aa_z) + x281 + x277 + (-1 * x274) + (x76 * x275) + (x276 * x270) + x278 + (-1 * x279 * x265) + (x230 * x280);
	const GEN_FLT x283 = x32 * x265;
	const GEN_FLT x284 = x239 * x270;
	const GEN_FLT x285 = x224 * aa_y;
	const GEN_FLT x286 = x270 * x250;
	const GEN_FLT x287 = (x273 * x222) + (-1 * x273 * x227);
	const GEN_FLT x288 = (-1 * x35 * x286) + x98 + (x270 * x285) + x287 + (x272 * x181) + x260 + (-1 * x59 * x275) + (-1 * x270 * x246) + (-1 * x284 * aa_x) + (-1 * x283 * x248);
	const GEN_FLT x289 = x273 * x256;
	const GEN_FLT x290 = x224 * aa_x;
	const GEN_FLT x291 = x232 * x273;
	const GEN_FLT x292 = (-1 * x86 * x286) + (-1 * x244) + (-1 * x270 * x290) + (-1 * x284 * aa_y) + (-1 * x283 * x255) + (-1 * x289) + x65 + x249 + x291 + (-1 * x271 * x241) + (x271 * x252) + (x280 * x245);
	const GEN_FLT x293 = (x292 * x132) + (x288 * x122) + (x282 * x109);
	const GEN_FLT x294 = (x293 * x134) + (-1 * x282 * x108);
	const GEN_FLT x295 = x293 * x144;
	const GEN_FLT x296 = x0 * lh_qk;
	const GEN_FLT x297 = lh_qk * lh_qk * lh_qk;
	const GEN_FLT x298 = (-1 * x203 * x297) + (x207 * lh_qk) + (x201 * x297) + (-1 * x296 * x266) + (x205 * lh_qk) + (-1 * x206 * lh_qk) + (x267 * lh_qk) + (-1 * x268 * lh_qk);
	const GEN_FLT x299 = x239 * x298;
	const GEN_FLT x300 = x1 * x216;
	const GEN_FLT x301 = x298 * aa_z;
	const GEN_FLT x302 = x298 * x250;
	const GEN_FLT x303 = x32 * x296;
	const GEN_FLT x304 = x247 * x303;
	const GEN_FLT x305 = x242 * lh_qk;
	const GEN_FLT x306 = x253 * lh_qk;
	const GEN_FLT x307 = (x306 * lh_qi) + (-1 * x305 * lh_qi);
	const GEN_FLT x308 = x307 + x277 + (-1 * x79 * x304) + (-1 * x299 * aa_x) + (x76 * x300) + (-1 * x35 * x302) + (-1 * x278) + (-1 * x1 * x227) + (-1 * x219 * x301) + (x298 * x285) + x274;
	const GEN_FLT x309 = x259 + (-1 * x279 * x296) + (x1 * x233) + (-1 * x213 * x298) + (-1 * x1 * x235) + (-1 * x258) + (x276 * x298) + (x224 * x301) + x257 + x287 + (x231 * x298);
	const GEN_FLT x310 = x35 * x218;
	const GEN_FLT x311 = (x306 * lh_qj) + (-1 * x305 * lh_qj);
	const GEN_FLT x312 = x236 + (x1 * x232) + (-1 * x86 * x302) + x90 + (x301 * x310) + (-1 * x76 * x304) + (-1 * x79 * x300) + (-1 * x298 * x290) + x311 + (-1 * x299 * aa_y);
	const GEN_FLT x313 = (x312 * x132) + (x308 * x122) + (x309 * x109);
	const GEN_FLT x314 = (x313 * x134) + (-1 * x309 * x108);
	const GEN_FLT x315 = x132 * x138;
	const GEN_FLT x316 = x132 * x144;
	const GEN_FLT x317 = x192 * x138;
	const GEN_FLT x318 = x180 + x166 + (-1 * x127) + x66;
	const GEN_FLT x319 = 2 * x318;
	const GEN_FLT x320 = x319 * x138;
	const GEN_FLT x321 = x318 * x141 * x143;
	const GEN_FLT x322 = x125 * lh_qk;
	const GEN_FLT x323 = x79 * x75;
	const GEN_FLT x324 = x59 * x247;
	const GEN_FLT x325 = x310 * aa_y;
	const GEN_FLT x326 = x219 * aa_x;
	out[0] = (-1 * x133 * x145) + (x121 * x142) + (x135 * x139);
	out[1] = (-1 * x172 * x145) + (x168 * x142) + (x173 * x139);
	out[2] = (-1 * x122 * x193) + (x188 * x142) + (x192 * x139);
	out[3] = (-1 * x264 * x122) + (x254 * x142) + (x263 * x139);
	out[4] = (-1 * x295 * x122) + (x288 * x142) + (x294 * x139);
	out[5] = (x314 * x139) + (-1 * x313 * x145) + (x308 * x142);
	out[6] = (-1 * x316 * x133) + (x131 * x142) + (x315 * x135);
	out[7] = (-1 * x316 * x172) + (x171 * x142) + (x315 * x173);
	out[8] = (-1 * x193 * x132) + (x190 * x142) + (x317 * x132);
	out[9] = (-1 * x264 * x132) + (x263 * x315) + (x261 * x142);
	out[10] = (-1 * x295 * x132) + (x292 * x142) + (x294 * x315);
	out[11] = (-1 * x313 * x316) + (x312 * x142) + (x315 * x314);
	out[12] = (x142 * ((-1 * x53 * x322) + (-0.5 * x91) + (-1 * x85 * x19) + x187 + (-1 * x159) + (-1 * x77 * x34) + x158 + (x58 * x323) + x147 + (x86 * x78) + (-1 * x59 * x118))) + (-1 * x321 * x133) + (x320 * x135);
	out[13] = (x142 * (x88 + x189 + x36 + (-1 * x35 * x157) + (x82 * x18) + (-1 * x34 * x156) + (-1 * x59 * x167) + (-1 * x322 * x152) + (x323 * x153) + (-0.5 * x97))) + (-1 * x321 * x172) + (x320 * x173);
	out[14] = (x142 * ((x17 * x120) + x40 + (-1 * x59 * x184) + (x323 * x177) + (-1 * x322 * x176) + (-1 * x17 * x110) + (-1 * x114) + (-0.5 * x101) + x169 + (-1 * x76 * x182) + (-1 * x170) + x117)) + (-1 * x321 * x191) + (x317 * x319);
	out[15] = (-1 * x262 * x321) + (x142 * (x281 + (x220 * aa_x) + (-1 * x71 * x251) + x96 + (-1 * x210 * x325) + x307 + (-1 * x76 * x217) + (x5 * x227) + (-1 * x240 * aa_z) + (-1 * x324 * x194))) + (x263 * x320);
	out[16] = (x142 * (x311 + x229 + (-1 * x71 * x286) + (x79 * x275) + (-1 * x223) + (-1 * x283 * x324) + (-1 * x218 * x280 * aa_y) + (x270 * x326) + (-1 * x42 * x272) + (-1 * x284 * aa_z) + x228)) + (-1 * x293 * x321) + (x294 * x320);
	out[17] = (x142 * ((-1 * x298 * x325) + (-1 * x1 * x242) + (-1 * x71 * x302) + x243 + (-1 * x303 * x324) + x65 + x289 + (x1 * x253) + (-1 * x238) + (-1 * x299 * aa_z) + (x298 * x326) + (-1 * x291))) + (-1 * x313 * x321) + (x314 * x320);
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
	out[21] = 1;
	out[22] = 0;
	out[23] = 0;
	out[24] = 0;
	out[25] = 0;
	out[26] = 0;
	out[27] = 0;
	out[28] = 1;
	out[29] = 0;
	out[30] = 0;
	out[31] = 0;
	out[32] = 0;
	out[33] = 0;
	out[34] = 0;
	out[35] = 1;
}

static inline void gen_imu_correct_up(FLT* out, const FLT mu, const FLT* imu_rot, const FLT* up_in_obj) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT obj_up_x = up_in_obj[0];
	const GEN_FLT obj_up_y = up_in_obj[1];
	const GEN_FLT obj_up_z = up_in_obj[2];
	const GEN_FLT x0 = (obj_qi * obj_up_y) + (obj_qw * obj_up_z) + (-1 * obj_qj * obj_up_x);
	const GEN_FLT x1 = (obj_qj * obj_up_z) + (-1 * obj_qk * obj_up_y) + (obj_qw * obj_up_x);
	const GEN_FLT x2 = obj_up_y + (2 * ((x1 * obj_qk) + (-1 * x0 * obj_qi)));
	const GEN_FLT x3 = (obj_qk * obj_up_x) + (-1 * obj_qi * obj_up_z) + (obj_qw * obj_up_y);
	const GEN_FLT x4 = obj_up_x + (2 * ((x0 * obj_qj) + (-1 * x3 * obj_qk)));
	const GEN_FLT x5 = x4 * x4;
	const GEN_FLT x6 = x2 * x2;
	const GEN_FLT x7 = atan2(sqrt(x5 + x6), obj_up_z + (2 * ((x3 * obj_qi) + (-1 * x1 * obj_qj))));
	const GEN_FLT x8 = 0.25 * (mu * mu) * (x7 * x7);
	const GEN_FLT x9 = x5 * x8;
	const GEN_FLT x10 = x6 * x8;
	const GEN_FLT x11 = 1e-10 + x10 + x9;
	const GEN_FLT x12 = sqrt(x11);
	const GEN_FLT x13 = 0.5 * x12;
	const GEN_FLT x14 = sin(x13);
	const GEN_FLT x15 = (x14 * x14) * (1. / x11);
	const GEN_FLT x16 = cos(x13);
	const GEN_FLT x17 = 1. / sqrt(1e-11 + (x16 * x16) + (x15 * x10) + (x9 * x15));
	const GEN_FLT x18 = 0.5 * mu * x7 * x14 * (1. / x12) * x17;
	const GEN_FLT x19 = x2 * x18;
	const GEN_FLT x20 = x4 * x18;
	const GEN_FLT x21 = x17 * x16;
	const GEN_FLT x22 = x18 * obj_qw;
	out[0] = (x21 * obj_qw) + (x20 * obj_qj) + (-1 * x19 * obj_qi);
	out[1] = (x21 * obj_qi) + (x2 * x22) + (-1 * x20 * obj_qk);
	out[2] = (-1 * x19 * obj_qk) + (x21 * obj_qj) + (-1 * x4 * x22);
	out[3] = (x21 * obj_qk) + (x19 * obj_qj) + (x20 * obj_qi);
	out[4] = aa_x;
	out[5] = aa_y;
	out[6] = aa_z;
}

// Jacobian of imu_correct_up wrt [mu]
static inline void gen_imu_correct_up_jac_mu(FLT* out, const FLT mu, const FLT* imu_rot, const FLT* up_in_obj) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT obj_up_x = up_in_obj[0];
	const GEN_FLT obj_up_y = up_in_obj[1];
	const GEN_FLT obj_up_z = up_in_obj[2];
	const GEN_FLT x0 = mu * mu;
	const GEN_FLT x1 = 0.25 * x0;
	const GEN_FLT x2 = (obj_qi * obj_up_y) + (obj_qw * obj_up_z) + (-1 * obj_qj * obj_up_x);
	const GEN_FLT x3 = (obj_qj * obj_up_z) + (-1 * obj_qk * obj_up_y) + (obj_qw * obj_up_x);
	const GEN_FLT x4 = obj_up_y + (2 * ((x3 * obj_qk) + (-1 * x2 * obj_qi)));
	const GEN_FLT x5 = x4 * x4;
	const GEN_FLT x6 = (obj_qk * obj_up_x) + (-1 * obj_qi * obj_up_z) + (obj_qw * obj_up_y);
	const GEN_FLT x7 = obj_up_x + (2 * ((x2 * obj_qj) + (-1 * x6 * obj_qk)));
	const GEN_FLT x8 = x7 * x7;
	const GEN_FLT x9 = atan2(sqrt(x8 + x5), obj_up_z + (2 * ((x6 * obj_qi) + (-1 * x3 * obj_qj))));
	const GEN_FLT x10 = x9 * x9;
	const GEN_FLT x11 = x8 * x10;
	const GEN_FLT x12 = x1 * x11;
	const GEN_FLT x13 = x5 * x10;
	const GEN_FLT x14 = x1 * x13;
	const GEN_FLT x15 = 1e-10 + x14 + x12;
	const GEN_FLT x16 = sqrt(x15);
	const GEN_FLT x17 = 0.5 * x16;
	const GEN_FLT x18 = cos(x17);
	const GEN_FLT x19 = 1. / x15;
	const GEN_FLT x20 = sin(x17);
	const GEN_FLT x21 = x20 * x20;
	const GEN_FLT x22 = x21 * x19;
	const GEN_FLT x23 = 1e-11 + (x18 * x18) + (x22 * x14) + (x22 * x12);
	const GEN_FLT x24 = 1. / x16;
	const GEN_FLT x25 = 0.5 * mu;
	const GEN_FLT x26 = x25 * x13;
	const GEN_FLT x27 = x25 * x11;
	const GEN_FLT x28 = x27 + x26;
	const GEN_FLT x29 = x20 * x28;
	const GEN_FLT x30 = x24 * x29;
	const GEN_FLT x31 = x21 * x28 * (1. / (x15 * x15));
	const GEN_FLT x32 = x29 * (1. / (x15 * sqrt(x15)));
	const GEN_FLT x33 = 0.125 * x18;
	const GEN_FLT x34 = x0 * x32 * x33;
	const GEN_FLT x35 = (1. / (x23 * sqrt(x23))) * ((x34 * x11) + (x22 * x26) + (x22 * x27) + (x34 * x13) + (-1 * x31 * x12) + (-1 * x31 * x14) + (-0.5 * x30 * x18));
	const GEN_FLT x36 = 1.0/2.0 * x35;
	const GEN_FLT x37 = x36 * x18;
	const GEN_FLT x38 = x7 * x9;
	const GEN_FLT x39 = x24 * x20;
	const GEN_FLT x40 = 0.25 * mu;
	const GEN_FLT x41 = x40 * x35 * x39;
	const GEN_FLT x42 = x41 * x38;
	const GEN_FLT x43 = 1. / sqrt(x23);
	const GEN_FLT x44 = x43 * x38;
	const GEN_FLT x45 = x40 * x32;
	const GEN_FLT x46 = x45 * obj_qj;
	const GEN_FLT x47 = 0.5 * x39;
	const GEN_FLT x48 = x43 * x47;
	const GEN_FLT x49 = x4 * x9;
	const GEN_FLT x50 = x48 * x49;
	const GEN_FLT x51 = x41 * x49;
	const GEN_FLT x52 = 0.25 * x30;
	const GEN_FLT x53 = x52 * x43;
	const GEN_FLT x54 = x48 * x38;
	const GEN_FLT x55 = x18 * obj_qj;
	const GEN_FLT x56 = mu * x28 * x19;
	const GEN_FLT x57 = 0.125 * x56 * x55;
	const GEN_FLT x58 = x43 * x49;
	const GEN_FLT x59 = x45 * obj_qi;
	const GEN_FLT x60 = x56 * x33;
	const GEN_FLT x61 = x60 * obj_qi;
	const GEN_FLT x62 = x58 * obj_qw;
	const GEN_FLT x63 = x43 * obj_qk;
	const GEN_FLT x64 = x63 * x38;
	const GEN_FLT x65 = x63 * x49;
	const GEN_FLT x66 = x38 * obj_qw;
	const GEN_FLT x67 = x66 * x43;
	out[0] = (-1 * x61 * x58) + (x57 * x44) + (-1 * x53 * obj_qw) + (x51 * obj_qi) + (x54 * obj_qj) + (-1 * x50 * obj_qi) + (x58 * x59) + (-1 * x44 * x46) + (-1 * x42 * obj_qj) + (-1 * x37 * obj_qw);
	out[1] = (x42 * obj_qk) + (x60 * x62) + (-1 * x60 * x64) + (-1 * x62 * x45) + (-1 * x37 * obj_qi) + (-1 * x64 * x47) + (-1 * x51 * obj_qw) + (x64 * x45) + (x50 * obj_qw) + (-1 * x53 * obj_qi);
	out[2] = (-1 * x60 * x67) + (-1 * x66 * x48) + (-1 * x65 * x47) + (x66 * x41) + (-1 * x60 * x65) + (x65 * x45) + (x67 * x45) + (x51 * obj_qk) + (-1 * x53 * obj_qj) + (-1 * x55 * x36);
	out[3] = (x61 * x44) + (x50 * obj_qj) + (-1 * x42 * obj_qi) + (-1 * x63 * x52) + (-1 * x59 * x44) + (x54 * obj_qi) + (-1 * x37 * obj_qk) + (x58 * x57) + (-1 * x58 * x46) + (-1 * x51 * obj_qj);
	out[4] = 0;
	out[5] = 0;
	out[6] = 0;
}

// Jacobian of imu_correct_up wrt [obj_qw, obj_qi, obj_qj, obj_qk, aa_x, aa_y, aa_z]
static inline void gen_imu_correct_up_jac_imu_rot(FLT* out, const FLT mu, const FLT* imu_rot, const FLT* up_in_obj) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT obj_up_x = up_in_obj[0];
	const GEN_FLT obj_up_y = up_in_obj[1];
	const GEN_FLT obj_up_z = up_in_obj[2];
	const GEN_FLT x0 = obj_qw * obj_up_y;
	const GEN_FLT x1 = obj_qi * obj_up_z;
	const GEN_FLT x2 = obj_qk * obj_up_x;
	const GEN_FLT x3 = x2 + (-1 * x1) + x0;
	const GEN_FLT x4 = obj_qj * obj_up_x;
	const GEN_FLT x5 = obj_qw * obj_up_z;
	const GEN_FLT x6 = obj_qi * obj_up_y;
	const GEN_FLT x7 = x6 + x5 + (-1 * x4);
	const GEN_FLT x8 = obj_up_x + (2 * ((x7 * obj_qj) + (-1 * x3 * obj_qk)));
	const GEN_FLT x9 = x8 * x8;
	const GEN_FLT x10 = mu * mu;
	const GEN_FLT x11 = obj_qw * obj_up_x;
	const GEN_FLT x12 = obj_qk * obj_up_y;
	const GEN_FLT x13 = obj_qj * obj_up_z;
	const GEN_FLT x14 = x13 + (-1 * x12) + x11;
	const GEN_FLT x15 = obj_up_y + (2 * ((x14 * obj_qk) + (-1 * x7 * obj_qi)));
	const GEN_FLT x16 = x15 * x15;
	const GEN_FLT x17 = x9 + x16;
	const GEN_FLT x18 = sqrt(x17);
	const GEN_FLT x19 = obj_up_z + (2 * ((x3 * obj_qi) + (-1 * x14 * obj_qj)));
	const GEN_FLT x20 = atan2(x18, x19);
	const GEN_FLT x21 = (x20 * x20) * x10;
	const GEN_FLT x22 = 0.25 * x21;
	const GEN_FLT x23 = x9 * x22;
	const GEN_FLT x24 = x22 * x16;
	const GEN_FLT x25 = 1e-10 + x24 + x23;
	const GEN_FLT x26 = 1. / x25;
	const GEN_FLT x27 = sqrt(x25);
	const GEN_FLT x28 = 0.5 * x27;
	const GEN_FLT x29 = sin(x28);
	const GEN_FLT x30 = x29 * x29;
	const GEN_FLT x31 = x30 * x26;
	const GEN_FLT x32 = cos(x28);
	const GEN_FLT x33 = 1e-11 + (x32 * x32) + (x31 * x24) + (x31 * x23);
	const GEN_FLT x34 = 1. / sqrt(x33);
	const GEN_FLT x35 = x32 * x34;
	const GEN_FLT x36 = 2 * x1;
	const GEN_FLT x37 = 2 * x2;
	const GEN_FLT x38 = x37 + (-1 * x36);
	const GEN_FLT x39 = 0.5 * x21;
	const GEN_FLT x40 = x39 * x15;
	const GEN_FLT x41 = x40 * x38;
	const GEN_FLT x42 = 0.5 * x20;
	const GEN_FLT x43 = x42 * x10;
	const GEN_FLT x44 = x43 * x16;
	const GEN_FLT x45 = 2 * x12;
	const GEN_FLT x46 = 2 * x13;
	const GEN_FLT x47 = x46 + (-1 * x45);
	const GEN_FLT x48 = 2 * x8;
	const GEN_FLT x49 = 2 * x15;
	const GEN_FLT x50 = 1.0/2.0 * (1. / x19) * (1. / x18);
	const GEN_FLT x51 = 2 * x4;
	const GEN_FLT x52 = 2 * x6;
	const GEN_FLT x53 = x19 * x19;
	const GEN_FLT x54 = (1. / x53) * x18;
	const GEN_FLT x55 = (1. / (x17 + x53)) * x53;
	const GEN_FLT x56 = x55 * ((-1 * (x52 + (-1 * x51)) * x54) + (((x49 * x38) + (x47 * x48)) * x50));
	const GEN_FLT x57 = x56 * x44;
	const GEN_FLT x58 = x8 * x39;
	const GEN_FLT x59 = x58 * x47;
	const GEN_FLT x60 = x9 * x43;
	const GEN_FLT x61 = x60 * x56;
	const GEN_FLT x62 = x59 + x57 + x61 + x41;
	const GEN_FLT x63 = x29 * (1. / x27);
	const GEN_FLT x64 = x63 * x62;
	const GEN_FLT x65 = 0.25 * x34;
	const GEN_FLT x66 = x64 * x65;
	const GEN_FLT x67 = mu * x15;
	const GEN_FLT x68 = (1. / (x25 * sqrt(x25))) * x29;
	const GEN_FLT x69 = x68 * x65;
	const GEN_FLT x70 = x67 * x69;
	const GEN_FLT x71 = x70 * x20;
	const GEN_FLT x72 = x71 * obj_qi;
	const GEN_FLT x73 = mu * x8;
	const GEN_FLT x74 = x73 * x63;
	const GEN_FLT x75 = x74 * obj_qj;
	const GEN_FLT x76 = 0.5 * x34;
	const GEN_FLT x77 = x76 * x56;
	const GEN_FLT x78 = x63 * x67;
	const GEN_FLT x79 = x78 * obj_qi;
	const GEN_FLT x80 = 1. / (x33 * sqrt(x33));
	const GEN_FLT x81 = 0.5 * x32;
	const GEN_FLT x82 = x30 * (1. / (x25 * x25));
	const GEN_FLT x83 = x82 * x24;
	const GEN_FLT x84 = 0.125 * x62;
	const GEN_FLT x85 = x68 * x32 * x21;
	const GEN_FLT x86 = x9 * x85;
	const GEN_FLT x87 = x85 * x16;
	const GEN_FLT x88 = x82 * x23;
	const GEN_FLT x89 = x80 * ((x84 * x86) + (x61 * x31) + (x59 * x31) + (-1 * x88 * x62) + (x84 * x87) + (-1 * x83 * x62) + (x57 * x31) + (x41 * x31) + (-1 * x81 * x64));
	const GEN_FLT x90 = 0.25 * x20;
	const GEN_FLT x91 = x89 * x90;
	const GEN_FLT x92 = 1.0/2.0 * x32;
	const GEN_FLT x93 = x89 * x92;
	const GEN_FLT x94 = x35 * x26;
	const GEN_FLT x95 = x84 * x94;
	const GEN_FLT x96 = x95 * x20;
	const GEN_FLT x97 = x67 * obj_qi;
	const GEN_FLT x98 = x89 * obj_qi;
	const GEN_FLT x99 = x90 * x98;
	const GEN_FLT x100 = x42 * x34;
	const GEN_FLT x101 = x63 * x100;
	const GEN_FLT x102 = mu * x101;
	const GEN_FLT x103 = x47 * x102;
	const GEN_FLT x104 = x38 * x102;
	const GEN_FLT x105 = x73 * obj_qj;
	const GEN_FLT x106 = x69 * x20;
	const GEN_FLT x107 = x105 * x106;
	const GEN_FLT x108 = 2 * x5;
	const GEN_FLT x109 = x51 + (-1 * x108) + (-4 * x6);
	const GEN_FLT x110 = x40 * x109;
	const GEN_FLT x111 = 2 * obj_qk * obj_up_z;
	const GEN_FLT x112 = 2 * obj_qj * obj_up_y;
	const GEN_FLT x113 = x112 + x111;
	const GEN_FLT x114 = x58 * x113;
	const GEN_FLT x115 = 2 * x0;
	const GEN_FLT x116 = x55 * ((-1 * x54 * (x115 + (-4 * x1) + x37)) + (((x49 * x109) + (x48 * x113)) * x50));
	const GEN_FLT x117 = x44 * x116;
	const GEN_FLT x118 = x60 * x116;
	const GEN_FLT x119 = x118 + x117 + x114 + x110;
	const GEN_FLT x120 = x81 * x63;
	const GEN_FLT x121 = x82 * x119;
	const GEN_FLT x122 = 0.125 * x87;
	const GEN_FLT x123 = 0.125 * x86;
	const GEN_FLT x124 = (-1 * x23 * x121) + (x31 * x118) + (x119 * x123) + (x31 * x117) + (x31 * x110) + (x119 * x122) + (-1 * x24 * x121) + (x31 * x114) + (-1 * x119 * x120);
	const GEN_FLT x125 = x80 * x92;
	const GEN_FLT x126 = x124 * x125;
	const GEN_FLT x127 = x63 * x65;
	const GEN_FLT x128 = x119 * obj_qw;
	const GEN_FLT x129 = x76 * x116;
	const GEN_FLT x130 = x20 * x119;
	const GEN_FLT x131 = x102 * obj_qj;
	const GEN_FLT x132 = x78 * x100;
	const GEN_FLT x133 = -1 * x132;
	const GEN_FLT x134 = x80 * x90;
	const GEN_FLT x135 = x124 * x134;
	const GEN_FLT x136 = x102 * obj_qi;
	const GEN_FLT x137 = 0.125 * x94;
	const GEN_FLT x138 = x130 * obj_qj;
	const GEN_FLT x139 = x73 * x69;
	const GEN_FLT x140 = x73 * x137;
	const GEN_FLT x141 = (-4 * x4) + x108 + x52;
	const GEN_FLT x142 = 2 * obj_qi * obj_up_x;
	const GEN_FLT x143 = x111 + x142;
	const GEN_FLT x144 = x40 * x143;
	const GEN_FLT x145 = 2 * x11;
	const GEN_FLT x146 = x55 * ((-1 * x54 * ((-1 * x145) + x45 + (-4 * x13))) + (((x49 * x143) + (x48 * x141)) * x50));
	const GEN_FLT x147 = x44 * x146;
	const GEN_FLT x148 = x58 * x141;
	const GEN_FLT x149 = x60 * x146;
	const GEN_FLT x150 = x149 + x148 + x147 + x144;
	const GEN_FLT x151 = x20 * x150;
	const GEN_FLT x152 = x137 * x151;
	const GEN_FLT x153 = x76 * x146;
	const GEN_FLT x154 = (x123 * x150) + (-1 * x83 * x150) + (-1 * x88 * x150) + (x31 * x149) + (x31 * x148) + (x31 * x144) + (x122 * x150) + (x31 * x147) + (-1 * x120 * x150);
	const GEN_FLT x155 = x125 * x154;
	const GEN_FLT x156 = x134 * x154;
	const GEN_FLT x157 = x69 * x151;
	const GEN_FLT x158 = x102 * x143;
	const GEN_FLT x159 = x127 * x150;
	const GEN_FLT x160 = x73 * x101;
	const GEN_FLT x161 = x140 * x151;
	const GEN_FLT x162 = (-1 * x115) + x36 + (-4 * x2);
	const GEN_FLT x163 = x145 + (-4 * x12) + x46;
	const GEN_FLT x164 = x55 * ((-1 * (x142 + x112) * x54) + (((x49 * x163) + (x48 * x162)) * x50));
	const GEN_FLT x165 = x44 * x164;
	const GEN_FLT x166 = x40 * x163;
	const GEN_FLT x167 = x58 * x162;
	const GEN_FLT x168 = x60 * x164;
	const GEN_FLT x169 = x168 + x167 + x166 + x165;
	const GEN_FLT x170 = x127 * x169;
	const GEN_FLT x171 = 0.125 * x169;
	const GEN_FLT x172 = x94 * x171;
	const GEN_FLT x173 = x20 * x172;
	const GEN_FLT x174 = (-1 * x88 * x169) + (x87 * x171) + (x31 * x168) + (x86 * x171) + (x31 * x165) + (x31 * x167) + (-1 * x83 * x169) + (x31 * x166) + (-1 * x120 * x169);
	const GEN_FLT x175 = x125 * x174;
	const GEN_FLT x176 = x71 * x169;
	const GEN_FLT x177 = x174 * x134;
	const GEN_FLT x178 = x76 * x164;
	const GEN_FLT x179 = x74 * x177;
	const GEN_FLT x180 = x102 * x162;
	const GEN_FLT x181 = x20 * obj_qk;
	const GEN_FLT x182 = x73 * x181;
	const GEN_FLT x183 = x69 * x182;
	const GEN_FLT x184 = x78 * obj_qw;
	const GEN_FLT x185 = x74 * obj_qk;
	const GEN_FLT x186 = x96 * obj_qw;
	const GEN_FLT x187 = x71 * obj_qw;
	const GEN_FLT x188 = x119 * x127;
	const GEN_FLT x189 = x130 * obj_qk;
	const GEN_FLT x190 = x102 * obj_qk;
	const GEN_FLT x191 = x20 * x128;
	const GEN_FLT x192 = x67 * x137;
	const GEN_FLT x193 = x102 * obj_qw;
	const GEN_FLT x194 = x67 * x152;
	const GEN_FLT x195 = -1 * x160;
	const GEN_FLT x196 = x73 * obj_qw;
	const GEN_FLT x197 = x62 * x106;
	const GEN_FLT x198 = x74 * obj_qw;
	const GEN_FLT x199 = x67 * x181;
	const GEN_FLT x200 = x70 * x181;
	const GEN_FLT x201 = x78 * obj_qk;
	const GEN_FLT x202 = x106 * x169;
	const GEN_FLT x203 = x73 * obj_qi;
	const GEN_FLT x204 = x63 * x203;
	const GEN_FLT x205 = x78 * obj_qj;
	const GEN_FLT x206 = x67 * obj_qj;
	const GEN_FLT x207 = x71 * obj_qj;
	const GEN_FLT x208 = x203 * x130;
	const GEN_FLT x209 = x125 * obj_qk;
	out[0] = (x96 * x105) + (x75 * x77) + (-1 * x79 * x77) + (-1 * x62 * x107) + (-1 * x104 * obj_qi) + (-1 * x66 * obj_qw) + (x72 * x62) + (x103 * obj_qj) + (-1 * x75 * x91) + x35 + (-1 * x93 * obj_qw) + (-1 * x97 * x96) + (x78 * x99);
	out[1] = (-1 * x138 * x139) + (x138 * x140) + (-1 * x126 * obj_qw) + (x75 * x129) + (-1 * x128 * x127) + (x70 * x130 * obj_qi) + (-1 * x79 * x129) + (x79 * x135) + (-1 * x75 * x135) + (x113 * x131) + (-1 * x109 * x136) + x133 + (-1 * x97 * x130 * x137);
	out[2] = (-1 * x75 * x156) + x160 + (x131 * x141) + (-1 * x155 * obj_qw) + (x75 * x153) + (-1 * x97 * x152) + (x72 * x150) + (x161 * obj_qj) + (-1 * x79 * x153) + (x79 * x156) + (-1 * x105 * x157) + (-1 * x158 * obj_qi) + (-1 * x159 * obj_qw);
	out[3] = (x180 * obj_qj) + (-1 * x179 * obj_qj) + (-1 * x170 * obj_qw) + (-1 * x97 * x173) + (-1 * x175 * obj_qw) + (x75 * x178) + (x176 * obj_qi) + (x105 * x173) + (-1 * x79 * x178) + (x79 * x177) + (-1 * x107 * x169) + (-1 * x163 * x136);
	out[4] = 0;
	out[5] = 0;
	out[6] = 0;
	out[7] = x132 + (x77 * x184) + (-1 * x62 * x187) + (-1 * x103 * obj_qk) + (x62 * x183) + (-1 * x91 * x184) + (-1 * x77 * x185) + (x104 * obj_qw) + (-1 * x95 * x182) + (x91 * x185) + (-1 * x66 * obj_qi) + (x67 * x186) + (-1 * x92 * x98);
	out[8] = (x109 * x193) + (-1 * x184 * x135) + (-1 * x126 * obj_qi) + x35 + (-1 * x188 * obj_qi) + (x189 * x139) + (-1 * x129 * x185) + (-1 * x71 * x128) + (x185 * x135) + (x129 * x184) + (-1 * x113 * x190) + (-1 * x189 * x140) + (x191 * x192);
	out[9] = (x158 * obj_qw) + (-1 * x190 * x141) + (x183 * x150) + (-1 * x181 * x140 * x150) + (-1 * x187 * x150) + (-1 * x184 * x156) + (-1 * x185 * x153) + (-1 * x155 * obj_qi) + (x185 * x156) + (x184 * x153) + (-1 * x159 * obj_qi) + (x194 * obj_qw);
	out[10] = (x178 * x184) + (-1 * x180 * obj_qk) + (-1 * x178 * x185) + (-1 * x175 * obj_qi) + (-1 * x176 * obj_qw) + (-1 * x177 * x184) + (x169 * x183) + (x163 * x193) + x195 + (-1 * x170 * obj_qi) + (-1 * x172 * x182) + (x67 * x173 * obj_qw) + (x177 * x185);
	out[11] = 0;
	out[12] = 0;
	out[13] = 0;
	out[14] = (x91 * x201) + (-1 * x77 * x201) + (-1 * x104 * obj_qk) + (-1 * x77 * x198) + (-1 * x73 * x186) + (x196 * x197) + (-1 * x93 * obj_qj) + x195 + (x91 * x198) + (-1 * x66 * obj_qj) + (-1 * x95 * x199) + (x62 * x200) + (-1 * x103 * obj_qw);
	out[15] = (x201 * x135) + (-1 * x126 * obj_qj) + (-1 * x109 * x190) + (x70 * x189) + (x191 * x139) + (-1 * x201 * x129) + (-1 * x129 * x198) + (-1 * x191 * x140) + (-1 * x113 * x193) + (x198 * x135) + (-1 * x188 * obj_qj) + (-1 * x189 * x192);
	out[16] = (x200 * x150) + (-1 * x155 * obj_qj) + (x198 * x156) + x35 + (-1 * x161 * obj_qw) + (x196 * x157) + (-1 * x159 * obj_qj) + (-1 * x201 * x153) + (-1 * x198 * x153) + (-1 * x158 * obj_qk) + (x201 * x156) + (-1 * x199 * x137 * x150) + (-1 * x193 * x141);
	out[17] = (x201 * x177) + (x179 * obj_qw) + x133 + (-1 * x175 * obj_qj) + (x202 * x196) + (-1 * x201 * x178) + (-1 * x173 * x196) + (-1 * x163 * x190) + (-1 * x180 * obj_qw) + (-1 * x172 * x199) + (x200 * x169) + (-1 * x178 * x198) + (-1 * x170 * obj_qj);
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
	out[21] = (x104 * obj_qj) + (-1 * x93 * obj_qk) + (-1 * x66 * obj_qk) + (x96 * x203) + (x77 * x204) + (-1 * x91 * x205) + (x103 * obj_qi) + (-1 * x203 * x197) + (x96 * x206) + (-1 * x74 * x99) + (x77 * x205) + (-1 * x62 * x207);
	out[22] = (-1 * x205 * x135) + (x192 * x138) + (x204 * x129) + (-1 * x126 * obj_qk) + (x208 * x137) + (-1 * x70 * x138) + (x113 * x136) + (-1 * x69 * x208) + (-1 * x188 * obj_qk) + (x109 * x131) + x160 + (-1 * x204 * x135) + (x205 * x129);
	out[23] = x132 + (x205 * x153) + (-1 * x207 * x150) + (-1 * x209 * x154) + (x194 * obj_qj) + (-1 * x159 * obj_qk) + (x131 * x143) + (-1 * x203 * x157) + (-1 * x204 * x156) + (x204 * x153) + (-1 * x205 * x156) + (x203 * x152) + (x136 * x141);
	out[24] = (-1 * x205 * x177) + (-1 * x176 * obj_qj) + (-1 * x202 * x203) + (-1 * x170 * obj_qk) + (-1 * x204 * x177) + (x206 * x173) + (x180 * obj_qi) + (-1 * x209 * x174) + (x204 * x178) + (x163 * x131) + (x205 * x178) + (x203 * x173) + x35;
	out[25] = 0;
	out[26] = 0;
	out[27] = 0;
	out[28] = 0;
	out[29] = 0;
	out[30] = 0;
	out[31] = 0;
	out[32] = 1;
	out[33] = 0;
	out[34] = 0;
	out[35] = 0;
	out[36] = 0;
	out[37] = 0;
	out[38] = 0;
	out[39] = 0;
	out[40] = 1;
	out[41] = 0;
	out[42] = 0;
	out[43] = 0;
	out[44] = 0;
	out[45] = 0;
	out[46] = 0;
	out[47] = 0;
	out[48] = 1;
}

// Jacobian of imu_correct_up wrt [obj_up_x, obj_up_y, obj_up_z]
static inline void gen_imu_correct_up_jac_up_in_obj(FLT* out, const FLT mu, const FLT* imu_rot, const FLT* up_in_obj) {
	const GEN_FLT obj_qw = imu_rot[0];
	const GEN_FLT obj_qi = imu_rot[1];
	const GEN_FLT obj_qj = imu_rot[2];
	const GEN_FLT obj_qk = imu_rot[3];
	const GEN_FLT aa_x = imu_rot[4];
	const GEN_FLT aa_y = imu_rot[5];
	const GEN_FLT aa_z = imu_rot[6];
	const GEN_FLT obj_up_x = up_in_obj[0];
	const GEN_FLT obj_up_y = up_in_obj[1];
	const GEN_FLT obj_up_z = up_in_obj[2];
	const GEN_FLT x0 = 2 * obj_qi;
	const GEN_FLT x1 = x0 * obj_qj;
	const GEN_FLT x2 = 2 * obj_qw;
	const GEN_FLT x3 = x2 * obj_qk;
	const GEN_FLT x4 = x3 + x1;
	const GEN_FLT x5 = (obj_qi * obj_up_y) + (obj_qw * obj_up_z) + (-1 * obj_qj * obj_up_x);
	const GEN_FLT x6 = (obj_qj * obj_up_z) + (-1 * obj_qk * obj_up_y) + (obj_qw * obj_up_x);
	const GEN_FLT x7 = obj_up_y + (2 * ((x6 * obj_qk) + (-1 * x5 * obj_qi)));
	const GEN_FLT x8 = mu * mu;
	const GEN_FLT x9 = x7 * x7;
	const GEN_FLT x10 = (obj_qk * obj_up_x) + (-1 * obj_qi * obj_up_z) + (obj_qw * obj_up_y);
	const GEN_FLT x11 = obj_up_x + (2 * ((x5 * obj_qj) + (-1 * x10 * obj_qk)));
	const GEN_FLT x12 = x11 * x11;
	const GEN_FLT x13 = x12 + x9;
	const GEN_FLT x14 = sqrt(x13);
	const GEN_FLT x15 = obj_up_z + (2 * ((x10 * obj_qi) + (-1 * x6 * obj_qj)));
	const GEN_FLT x16 = atan2(x14, x15);
	const GEN_FLT x17 = x8 * (x16 * x16);
	const GEN_FLT x18 = 0.5 * x17;
	const GEN_FLT x19 = x7 * x18;
	const GEN_FLT x20 = x4 * x19;
	const GEN_FLT x21 = -2 * (obj_qk * obj_qk);
	const GEN_FLT x22 = 1 + (-2 * (obj_qj * obj_qj));
	const GEN_FLT x23 = x22 + x21;
	const GEN_FLT x24 = 2 * x11;
	const GEN_FLT x25 = 2 * x7;
	const GEN_FLT x26 = 1.0/2.0 * (1. / x15) * (1. / x14);
	const GEN_FLT x27 = x2 * obj_qj;
	const GEN_FLT x28 = x0 * obj_qk;
	const GEN_FLT x29 = x15 * x15;
	const GEN_FLT x30 = (1. / x29) * x14;
	const GEN_FLT x31 = (1. / (x13 + x29)) * x29;
	const GEN_FLT x32 = x31 * ((-1 * (x28 + (-1 * x27)) * x30) + (x26 * ((x4 * x25) + (x24 * x23))));
	const GEN_FLT x33 = 0.5 * x8 * x16;
	const GEN_FLT x34 = x32 * x33;
	const GEN_FLT x35 = x9 * x34;
	const GEN_FLT x36 = x11 * x18;
	const GEN_FLT x37 = x36 * x23;
	const GEN_FLT x38 = x34 * x12;
	const GEN_FLT x39 = x38 + x37 + x35 + x20;
	const GEN_FLT x40 = 0.25 * x17;
	const GEN_FLT x41 = x40 * x12;
	const GEN_FLT x42 = x9 * x40;
	const GEN_FLT x43 = 1e-10 + x42 + x41;
	const GEN_FLT x44 = 1. / x43;
	const GEN_FLT x45 = sqrt(x43);
	const GEN_FLT x46 = 0.5 * x45;
	const GEN_FLT x47 = sin(x46);
	const GEN_FLT x48 = x47 * x47;
	const GEN_FLT x49 = x44 * x48;
	const GEN_FLT x50 = cos(x46);
	const GEN_FLT x51 = 1e-11 + (x50 * x50) + (x42 * x49) + (x41 * x49);
	const GEN_FLT x52 = 1. / sqrt(x51);
	const GEN_FLT x53 = (1. / x45) * x47;
	const GEN_FLT x54 = 0.25 * x53;
	const GEN_FLT x55 = x54 * x52;
	const GEN_FLT x56 = x55 * x39;
	const GEN_FLT x57 = x52 * obj_qi;
	const GEN_FLT x58 = mu * x16;
	const GEN_FLT x59 = x7 * x58;
	const GEN_FLT x60 = x50 * x39;
	const GEN_FLT x61 = 0.125 * x60;
	const GEN_FLT x62 = x61 * x44;
	const GEN_FLT x63 = x62 * x59;
	const GEN_FLT x64 = (1. / (x43 * sqrt(x43))) * x47;
	const GEN_FLT x65 = 0.25 * x64;
	const GEN_FLT x66 = x65 * x59;
	const GEN_FLT x67 = x66 * x39;
	const GEN_FLT x68 = 0.5 * x53;
	const GEN_FLT x69 = mu * x68;
	const GEN_FLT x70 = x69 * x32;
	const GEN_FLT x71 = x7 * x70;
	const GEN_FLT x72 = 1. / (x51 * sqrt(x51));
	const GEN_FLT x73 = x72 * obj_qi;
	const GEN_FLT x74 = (1. / (x43 * x43)) * x48;
	const GEN_FLT x75 = x74 * x42;
	const GEN_FLT x76 = x64 * x17;
	const GEN_FLT x77 = x76 * x61;
	const GEN_FLT x78 = x74 * x41;
	const GEN_FLT x79 = (x49 * x20) + (-1 * x78 * x39) + (x49 * x38) + (x49 * x37) + (x9 * x77) + (x77 * x12) + (-1 * x75 * x39) + (x49 * x35) + (-1 * x60 * x68);
	const GEN_FLT x80 = x54 * x59;
	const GEN_FLT x81 = x80 * x79;
	const GEN_FLT x82 = x52 * obj_qj;
	const GEN_FLT x83 = x70 * x11;
	const GEN_FLT x84 = x68 * x58;
	const GEN_FLT x85 = x84 * x52;
	const GEN_FLT x86 = x85 * obj_qi;
	const GEN_FLT x87 = x72 * obj_qj;
	const GEN_FLT x88 = x58 * x11;
	const GEN_FLT x89 = x88 * x54;
	const GEN_FLT x90 = x89 * x79;
	const GEN_FLT x91 = x82 * x62;
	const GEN_FLT x92 = x88 * x65;
	const GEN_FLT x93 = x82 * x39;
	const GEN_FLT x94 = x72 * obj_qw;
	const GEN_FLT x95 = 1.0/2.0 * x50;
	const GEN_FLT x96 = x79 * x95;
	const GEN_FLT x97 = x82 * x84;
	const GEN_FLT x98 = -2 * (obj_qi * obj_qi);
	const GEN_FLT x99 = 1 + x21 + x98;
	const GEN_FLT x100 = x99 * x19;
	const GEN_FLT x101 = x1 + (-1 * x3);
	const GEN_FLT x102 = 2 * obj_qk * obj_qj;
	const GEN_FLT x103 = x0 * obj_qw;
	const GEN_FLT x104 = (-1 * (x103 + x102) * x30) + (x26 * ((x99 * x25) + (x24 * x101)));
	const GEN_FLT x105 = x31 * x33;
	const GEN_FLT x106 = x9 * x105;
	const GEN_FLT x107 = x104 * x106;
	const GEN_FLT x108 = x36 * x101;
	const GEN_FLT x109 = x12 * x105;
	const GEN_FLT x110 = x109 * x104;
	const GEN_FLT x111 = x110 + x108 + x107 + x100;
	const GEN_FLT x112 = x68 * x50;
	const GEN_FLT x113 = 0.125 * x50;
	const GEN_FLT x114 = x76 * x113;
	const GEN_FLT x115 = x111 * x114;
	const GEN_FLT x116 = (-1 * x78 * x111) + (x9 * x115) + (x49 * x108) + (x49 * x100) + (-1 * x75 * x111) + (x49 * x107) + (x12 * x115) + (x49 * x110) + (-1 * x111 * x112);
	const GEN_FLT x117 = x95 * x116;
	const GEN_FLT x118 = x44 * x113;
	const GEN_FLT x119 = x57 * x118;
	const GEN_FLT x120 = x111 * x119;
	const GEN_FLT x121 = x65 * x111;
	const GEN_FLT x122 = x59 * x121;
	const GEN_FLT x123 = x55 * x111;
	const GEN_FLT x124 = x69 * x31;
	const GEN_FLT x125 = x7 * x124;
	const GEN_FLT x126 = x104 * x125;
	const GEN_FLT x127 = x82 * x111;
	const GEN_FLT x128 = x88 * x118;
	const GEN_FLT x129 = x87 * x116;
	const GEN_FLT x130 = x11 * x124;
	const GEN_FLT x131 = x104 * x130;
	const GEN_FLT x132 = x80 * x116;
	const GEN_FLT x133 = x27 + x28;
	const GEN_FLT x134 = x102 + (-1 * x103);
	const GEN_FLT x135 = (-1 * (x22 + x98) * x30) + (((x25 * x134) + (x24 * x133)) * x26);
	const GEN_FLT x136 = x106 * x135;
	const GEN_FLT x137 = x36 * x133;
	const GEN_FLT x138 = x19 * x134;
	const GEN_FLT x139 = x109 * x135;
	const GEN_FLT x140 = x139 + x138 + x137 + x136;
	const GEN_FLT x141 = x114 * x140;
	const GEN_FLT x142 = (-1 * x78 * x140) + (x49 * x139) + (-1 * x75 * x140) + (x12 * x141) + (x49 * x138) + (x49 * x137) + (x49 * x136) + (x9 * x141) + (-1 * x112 * x140);
	const GEN_FLT x143 = x95 * x142;
	const GEN_FLT x144 = x55 * x140;
	const GEN_FLT x145 = x88 * x140;
	const GEN_FLT x146 = x65 * x145;
	const GEN_FLT x147 = x89 * x142;
	const GEN_FLT x148 = x66 * x140;
	const GEN_FLT x149 = x125 * x135;
	const GEN_FLT x150 = x80 * x142;
	const GEN_FLT x151 = x118 * x145;
	const GEN_FLT x152 = x130 * x135;
	const GEN_FLT x153 = x72 * obj_qk;
	const GEN_FLT x154 = x85 * obj_qw;
	const GEN_FLT x155 = x85 * obj_qk;
	const GEN_FLT x156 = x52 * obj_qk;
	const GEN_FLT x157 = x52 * obj_qw;
	const GEN_FLT x158 = x88 * x156;
	const GEN_FLT x159 = x39 * x156;
	const GEN_FLT x160 = x72 * x117;
	const GEN_FLT x161 = x89 * x116;
	const GEN_FLT x162 = x59 * x118;
	const GEN_FLT x163 = x111 * x157;
	const GEN_FLT x164 = x94 * x116;
	const GEN_FLT x165 = x142 * x153;
	const GEN_FLT x166 = x162 * x140;
	const GEN_FLT x167 = x82 * x54;
	const GEN_FLT x168 = x88 * x57;
	out[0] = (x97 * x23) + (-1 * x56 * obj_qw) + (x81 * x73) + (-1 * x63 * x57) + (x67 * x57) + (-1 * x71 * x57) + (-1 * x87 * x90) + (x82 * x83) + (-1 * x4 * x86) + (-1 * x96 * x94) + (x88 * x91) + (-1 * x93 * x92);
	out[1] = (-1 * x57 * x126) + (x97 * x101) + (-1 * x59 * x120) + (-1 * x123 * obj_qw) + (x73 * x132) + (-1 * x92 * x127) + (x57 * x122) + (x128 * x127) + (-1 * x89 * x129) + (-1 * x86 * x99) + (-1 * x94 * x117) + (x82 * x131);
	out[2] = (x97 * x133) + (x73 * x150) + (-1 * x144 * obj_qw) + (-1 * x86 * x134) + (-1 * x94 * x143) + (-1 * x59 * x119 * x140) + (-1 * x87 * x147) + (x57 * x148) + (-1 * x82 * x146) + (x82 * x151) + (x82 * x152) + (-1 * x57 * x149);
	out[3] = (-1 * x73 * x96) + (-1 * x56 * obj_qi) + (x90 * x153) + (x71 * x157) + (-1 * x67 * x157) + (x4 * x154) + (-1 * x23 * x155) + (x63 * x157) + (-1 * x81 * x94) + (-1 * x62 * x158) + (-1 * x83 * x156) + (x92 * x159);
	out[4] = (x99 * x154) + (-1 * x80 * x164) + (-1 * x123 * obj_qi) + (x126 * x157) + (-1 * x111 * x118 * x158) + (-1 * x131 * x156) + (x161 * x153) + (-1 * x160 * obj_qi) + (x163 * x162) + (x121 * x158) + (-1 * x66 * x163) + (-1 * x101 * x155);
	out[5] = (x134 * x154) + (-1 * x148 * x157) + (-1 * x73 * x143) + (x89 * x165) + (x146 * x156) + (x149 * x157) + (-1 * x133 * x155) + (-1 * x151 * x156) + (-1 * x152 * x156) + (x166 * x157) + (-1 * x144 * obj_qi) + (-1 * x94 * x150);
	out[6] = (-1 * x4 * x155) + (-1 * x87 * x96) + (-1 * x39 * x167) + (x66 * x159) + (-1 * x63 * x156) + (-1 * x23 * x154) + (x90 * x94) + (-1 * x88 * x62 * x157) + (-1 * x83 * x157) + (x81 * x153) + (x92 * x39 * x157) + (-1 * x71 * x156);
	out[7] = (-1 * x99 * x155) + (-1 * x111 * x162 * x156) + (-1 * x160 * obj_qj) + (-1 * x54 * x127) + (-1 * x131 * x157) + (-1 * x126 * x156) + (x92 * x163) + (-1 * x128 * x163) + (x122 * x156) + (x89 * x164) + (-1 * x101 * x154) + (x132 * x153);
	out[8] = (-1 * x149 * x156) + (x146 * x157) + (-1 * x151 * x157) + (-1 * x166 * x156) + (-1 * x167 * x140) + (x94 * x147) + (x80 * x165) + (x148 * x156) + (-1 * x134 * x155) + (-1 * x87 * x143) + (-1 * x152 * x157) + (-1 * x133 * x154);
	out[9] = (-1 * x81 * x87) + (-1 * x66 * x93) + (-1 * x56 * obj_qk) + (x4 * x97) + (x59 * x91) + (-1 * x65 * x39 * x168) + (x83 * x57) + (-1 * x73 * x90) + (x82 * x71) + (x86 * x23) + (-1 * x96 * x153) + (x62 * x168);
	out[10] = (x82 * x126) + (-1 * x80 * x129) + (-1 * x117 * x153) + (-1 * x73 * x161) + (-1 * x123 * obj_qk) + (-1 * x121 * x168) + (x127 * x162) + (x99 * x97) + (x57 * x131) + (x88 * x120) + (x86 * x101) + (-1 * x66 * x127);
	out[11] = (x97 * x134) + (-1 * x144 * obj_qk) + (x57 * x152) + (-1 * x82 * x148) + (-1 * x73 * x147) + (-1 * x87 * x150) + (-1 * x57 * x146) + (x119 * x145) + (x82 * x149) + (x86 * x133) + (-1 * x95 * x165) + (x82 * x166);
	out[12] = 0;
	out[13] = 0;
	out[14] = 0;
	out[15] = 0;
	out[16] = 0;
	out[17] = 0;
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
}

static inline void gen_imu_predict_up(FLT* out, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = 0.101971621297793 * acc_y;
	const GEN_FLT x1 = 1. / sqrt(1e-11 + (obj_qw * obj_qw) + (obj_qk * obj_qk) + (obj_qi * obj_qi) + (obj_qj * obj_qj));
	const GEN_FLT x2 = x1 * obj_qw;
	const GEN_FLT x3 = 1 + (0.101971621297793 * acc_z);
	const GEN_FLT x4 = x1 * obj_qi;
	const GEN_FLT x5 = 0.101971621297793 * acc_x;
	const GEN_FLT x6 = x1 * obj_qk;
	const GEN_FLT x7 = (x4 * x3) + (-1 * x6 * x5) + (x0 * x2);
	const GEN_FLT x8 = x1 * obj_qj;
	const GEN_FLT x9 = (-1 * x0 * x4) + (x5 * x8) + (x2 * x3);
	const GEN_FLT x10 = (-1 * x3 * x8) + (x0 * x6) + (x2 * x5);
	out[0] = x5 + (2 * ((-1 * x8 * x9) + (x6 * x7)));
	out[1] = x0 + (2 * ((-1 * x6 * x10) + (x4 * x9)));
	out[2] = x3 + (2 * ((-1 * x4 * x7) + (x8 * x10)));
}

// Jacobian of imu_predict_up wrt [obj_px, obj_py, obj_pz, obj_qw, obj_qi, obj_qj, obj_qk, vx, vy, vz, avx, avy, avz, acc_x, acc_y, acc_z, gbx, gby, gbz]
static inline void gen_imu_predict_up_jac_kalman_model(FLT* out, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = obj_qj * obj_qj;
	const GEN_FLT x1 = obj_qi * obj_qi;
	const GEN_FLT x2 = obj_qk * obj_qk;
	const GEN_FLT x3 = obj_qw * obj_qw;
	const GEN_FLT x4 = 1e-11 + x3 + x2 + x1 + x0;
	const GEN_FLT x5 = 1. / (x4 * sqrt(x4));
	const GEN_FLT x6 = 0.101971621297793 * x5;
	const GEN_FLT x7 = x6 * acc_x;
	const GEN_FLT x8 = x7 * obj_qk;
	const GEN_FLT x9 = x8 * obj_qw;
	const GEN_FLT x10 = 1. / sqrt(x4);
	const GEN_FLT x11 = 0.101971621297793 * x10;
	const GEN_FLT x12 = x11 * acc_y;
	const GEN_FLT x13 = 1 + (0.101971621297793 * acc_z);
	const GEN_FLT x14 = x5 * x13;
	const GEN_FLT x15 = x14 * obj_qw;
	const GEN_FLT x16 = -1 * x15 * obj_qi;
	const GEN_FLT x17 = x6 * acc_y;
	const GEN_FLT x18 = (-1 * x3 * x17) + x16 + x12 + x9;
	const GEN_FLT x19 = 2 * x10;
	const GEN_FLT x20 = x19 * obj_qk;
	const GEN_FLT x21 = x13 * x10;
	const GEN_FLT x22 = x11 * acc_x;
	const GEN_FLT x23 = (-1 * x22 * obj_qk) + (x21 * obj_qi) + (x12 * obj_qw);
	const GEN_FLT x24 = 2 * x5;
	const GEN_FLT x25 = x24 * x23;
	const GEN_FLT x26 = x25 * obj_qk;
	const GEN_FLT x27 = obj_qw * obj_qi;
	const GEN_FLT x28 = x27 * x17;
	const GEN_FLT x29 = obj_qw * obj_qj;
	const GEN_FLT x30 = -1 * x7 * x29;
	const GEN_FLT x31 = x19 * ((-1 * x3 * x14) + x21 + x30 + x28);
	const GEN_FLT x32 = (-1 * x12 * obj_qi) + (x22 * obj_qj) + (x21 * obj_qw);
	const GEN_FLT x33 = x32 * x24;
	const GEN_FLT x34 = (-1 * x28) + x21 + (-1 * x1 * x14) + (x8 * obj_qi);
	const GEN_FLT x35 = x26 * obj_qi;
	const GEN_FLT x36 = obj_qj * obj_qi;
	const GEN_FLT x37 = x33 * x36;
	const GEN_FLT x38 = x16 + (-1 * x7 * x36) + (x1 * x17) + (-1 * x12);
	const GEN_FLT x39 = x19 * obj_qj;
	const GEN_FLT x40 = x8 * obj_qj;
	const GEN_FLT x41 = x36 * x14;
	const GEN_FLT x42 = (-1 * x29 * x17) + (-1 * x41) + x40;
	const GEN_FLT x43 = x15 * obj_qj;
	const GEN_FLT x44 = (-1 * x0 * x7) + (x36 * x17) + (-1 * x43) + x22;
	const GEN_FLT x45 = x32 * x19;
	const GEN_FLT x46 = x14 * obj_qk;
	const GEN_FLT x47 = x17 * obj_qk;
	const GEN_FLT x48 = -1 * x47 * obj_qw;
	const GEN_FLT x49 = x19 * (x48 + (-1 * x46 * obj_qi) + (x2 * x7) + (-1 * x22));
	const GEN_FLT x50 = x47 * obj_qi;
	const GEN_FLT x51 = (-1 * x15 * obj_qk) + (-1 * x40) + x50;
	const GEN_FLT x52 = x23 * x19;
	const GEN_FLT x53 = x33 * obj_qk;
	const GEN_FLT x54 = 0.203943242595586 * (1. / x4);
	const GEN_FLT x55 = -1 * x2 * x54;
	const GEN_FLT x56 = 0.101971621297793 + (-1 * x0 * x54);
	const GEN_FLT x57 = x54 * obj_qw;
	const GEN_FLT x58 = x57 * obj_qk;
	const GEN_FLT x59 = x54 * x36;
	const GEN_FLT x60 = x54 * obj_qk;
	const GEN_FLT x61 = x60 * obj_qi;
	const GEN_FLT x62 = x57 * obj_qj;
	const GEN_FLT x63 = (-1 * x3 * x7) + x48 + x22 + x43;
	const GEN_FLT x64 = (-1 * x21 * obj_qj) + (x12 * obj_qk) + (x22 * obj_qw);
	const GEN_FLT x65 = x64 * x24;
	const GEN_FLT x66 = x65 * obj_qk;
	const GEN_FLT x67 = x19 * obj_qi;
	const GEN_FLT x68 = x19 * ((-1 * x7 * x27) + x41 + (-1 * x50));
	const GEN_FLT x69 = x66 * obj_qj;
	const GEN_FLT x70 = x30 + (-1 * x21) + (-1 * x47 * obj_qj) + (x0 * x14);
	const GEN_FLT x71 = x19 * (x12 + (-1 * x9) + (-1 * x2 * x17) + (x46 * obj_qj));
	const GEN_FLT x72 = x64 * x19;
	const GEN_FLT x73 = -1 * x1 * x54;
	const GEN_FLT x74 = x57 * obj_qi;
	const GEN_FLT x75 = x60 * obj_qj;
	out[0] = 0;
	out[1] = 0;
	out[2] = 0;
	out[3] = (x33 * x29) + (-1 * x26 * obj_qw) + (-1 * x31 * obj_qj) + (x20 * x18);
	out[4] = (-1 * x38 * x39) + x37 + (-1 * x35) + (x34 * x20);
	out[5] = (-1 * x45) + (x0 * x33) + (-1 * x44 * x39) + (-1 * x26 * obj_qj) + (x42 * x20);
	out[6] = (x53 * obj_qj) + x52 + (-1 * x2 * x25) + (-1 * x51 * x39) + (x49 * obj_qk);
	out[7] = 0;
	out[8] = 0;
	out[9] = 0;
	out[10] = 0;
	out[11] = 0;
	out[12] = 0;
	out[13] = x56 + x55;
	out[14] = x59 + x58;
	out[15] = (-1 * x62) + x61;
	out[16] = 0;
	out[17] = 0;
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
	out[21] = 0;
	out[22] = (x66 * obj_qw) + (-1 * x33 * x27) + (-1 * x63 * x20) + (x31 * obj_qi);
	out[23] = (x66 * obj_qi) + x45 + (-1 * x1 * x33) + (-1 * x68 * obj_qk) + (x67 * x38);
	out[24] = (-1 * x70 * x20) + x69 + (-1 * x37) + (x67 * x44);
	out[25] = (-1 * x72) + (-1 * x71 * obj_qk) + (-1 * x53 * obj_qi) + (x2 * x65) + (x67 * x51);
	out[26] = 0;
	out[27] = 0;
	out[28] = 0;
	out[29] = 0;
	out[30] = 0;
	out[31] = 0;
	out[32] = (-1 * x58) + x59;
	out[33] = 0.101971621297793 + x55 + x73;
	out[34] = x75 + x74;
	out[35] = 0;
	out[36] = 0;
	out[37] = 0;
	out[38] = 0;
	out[39] = 0;
	out[40] = 0;
	out[41] = (-1 * x67 * x18) + (x63 * x39) + (x25 * x27) + (-1 * x65 * x29);
	out[42] = (-1 * x52) + (x1 * x25) + (-1 * x67 * x34) + (x68 * obj_qj) + (-1 * x65 * x36);
	out[43] = (x36 * x25) + (x70 * x39) + (-1 * x67 * x42) + (-1 * x0 * x65) + x72;
	out[44] = (-1 * x49 * obj_qi) + x35 + (x71 * obj_qj) + (-1 * x69);
	out[45] = 0;
	out[46] = 0;
	out[47] = 0;
	out[48] = 0;
	out[49] = 0;
	out[50] = 0;
	out[51] = x61 + x62;
	out[52] = (-1 * x74) + x75;
	out[53] = x56 + x73;
	out[54] = 0;
	out[55] = 0;
	out[56] = 0;
}

static inline void gen_quatrotateabout(FLT* out, const FLT* q1, const FLT* q2) {
	const GEN_FLT obj_qw = q1[0];
	const GEN_FLT obj_qi = q1[1];
	const GEN_FLT obj_qj = q1[2];
	const GEN_FLT obj_qk = q1[3];
	const GEN_FLT q1_w = q2[0];
	const GEN_FLT q1_x = q2[1];
	const GEN_FLT q1_y = q2[2];
	const GEN_FLT q1_z = q2[3];

	out[0] = (q1_w * obj_qw) + (-1 * q1_x * obj_qi) + (-1 * q1_y * obj_qj) + (-1 * q1_z * obj_qk);
	out[1] = (q1_x * obj_qw) + (q1_w * obj_qi) + (q1_z * obj_qj) + (-1 * q1_y * obj_qk);
	out[2] = (q1_y * obj_qw) + (-1 * q1_z * obj_qi) + (q1_x * obj_qk) + (q1_w * obj_qj);
	out[3] = (q1_z * obj_qw) + (q1_y * obj_qi) + (-1 * q1_x * obj_qj) + (q1_w * obj_qk);
}

// Jacobian of quatrotateabout wrt [obj_qw, obj_qi, obj_qj, obj_qk]
static inline void gen_quatrotateabout_jac_q1(FLT* out, const FLT* q1, const FLT* q2) {
	const GEN_FLT obj_qw = q1[0];
	const GEN_FLT obj_qi = q1[1];
	const GEN_FLT obj_qj = q1[2];
	const GEN_FLT obj_qk = q1[3];
	const GEN_FLT q1_w = q2[0];
	const GEN_FLT q1_x = q2[1];
	const GEN_FLT q1_y = q2[2];
	const GEN_FLT q1_z = q2[3];
	const GEN_FLT x0 = -1 * q1_x;
	const GEN_FLT x1 = -1 * q1_y;
	const GEN_FLT x2 = -1 * q1_z;
	out[0] = q1_w;
	out[1] = x0;
	out[2] = x1;
	out[3] = x2;
	out[4] = q1_x;
	out[5] = q1_w;
	out[6] = q1_z;
	out[7] = x1;
	out[8] = q1_y;
	out[9] = x2;
	out[10] = q1_w;
	out[11] = q1_x;
	out[12] = q1_z;
	out[13] = q1_y;
	out[14] = x0;
	out[15] = q1_w;
}

// Jacobian of quatrotateabout wrt [q1_w, q1_x, q1_y, q1_z]
static inline void gen_quatrotateabout_jac_q2(FLT* out, const FLT* q1, const FLT* q2) {
	const GEN_FLT obj_qw = q1[0];
	const GEN_FLT obj_qi = q1[1];
	const GEN_FLT obj_qj = q1[2];
	const GEN_FLT obj_qk = q1[3];
	const GEN_FLT q1_w = q2[0];
	const GEN_FLT q1_x = q2[1];
	const GEN_FLT q1_y = q2[2];
	const GEN_FLT q1_z = q2[3];
	const GEN_FLT x0 = -1 * obj_qi;
	const GEN_FLT x1 = -1 * obj_qj;
	const GEN_FLT x2 = -1 * obj_qk;
	out[0] = obj_qw;
	out[1] = x0;
	out[2] = x1;
	out[3] = x2;
	out[4] = obj_qi;
	out[5] = obj_qw;
	out[6] = x2;
	out[7] = obj_qj;
	out[8] = obj_qj;
	out[9] = obj_qk;
	out[10] = obj_qw;
	out[11] = x0;
	out[12] = obj_qk;
	out[13] = x1;
	out[14] = obj_qi;
	out[15] = obj_qw;
}

static inline void gen_imu_predict(FLT* out, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = 0.101971621297793 * acc_y;
	const GEN_FLT x1 = 1. / sqrt(1e-11 + (obj_qw * obj_qw) + (obj_qk * obj_qk) + (obj_qi * obj_qi) + (obj_qj * obj_qj));
	const GEN_FLT x2 = x1 * obj_qw;
	const GEN_FLT x3 = 1 + (0.101971621297793 * acc_z);
	const GEN_FLT x4 = x1 * obj_qi;
	const GEN_FLT x5 = 0.101971621297793 * acc_x;
	const GEN_FLT x6 = x1 * obj_qk;
	const GEN_FLT x7 = (x4 * x3) + (-1 * x6 * x5) + (x0 * x2);
	const GEN_FLT x8 = x1 * obj_qj;
	const GEN_FLT x9 = (-1 * x0 * x4) + (x5 * x8) + (x2 * x3);
	const GEN_FLT x10 = (-1 * x3 * x8) + (x0 * x6) + (x2 * x5);
	const GEN_FLT x11 = x1 * avy;
	const GEN_FLT x12 = x1 * avz;
	const GEN_FLT x13 = x1 * avx;
	const GEN_FLT x14 = (-1 * x13 * obj_qk) + (x12 * obj_qi) + (x11 * obj_qw);
	const GEN_FLT x15 = (-1 * x11 * obj_qi) + (x8 * avx) + (x12 * obj_qw);
	const GEN_FLT x16 = (-1 * x8 * avz) + (x11 * obj_qk) + (x13 * obj_qw);
	out[0] = x5 + (2 * ((-1 * x8 * x9) + (x6 * x7)));
	out[1] = x0 + (2 * ((-1 * x6 * x10) + (x4 * x9)));
	out[2] = x3 + (2 * ((-1 * x4 * x7) + (x8 * x10)));
	out[3] = avx + (2 * ((-1 * x8 * x15) + (x6 * x14))) + gbx;
	out[4] = avy + (2 * ((-1 * x6 * x16) + (x4 * x15))) + gby;
	out[5] = avz + (2 * ((-1 * x4 * x14) + (x8 * x16))) + gbz;
}

// Jacobian of imu_predict wrt [obj_px, obj_py, obj_pz, obj_qw, obj_qi, obj_qj, obj_qk, vx, vy, vz, avx, avy, avz, acc_x, acc_y, acc_z, gbx, gby, gbz]
static inline void gen_imu_predict_jac_kalman_model(FLT* out, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = obj_qw * obj_qk;
	const GEN_FLT x1 = obj_qj * obj_qj;
	const GEN_FLT x2 = obj_qi * obj_qi;
	const GEN_FLT x3 = obj_qk * obj_qk;
	const GEN_FLT x4 = obj_qw * obj_qw;
	const GEN_FLT x5 = 1e-11 + x4 + x3 + x2 + x1;
	const GEN_FLT x6 = 1. / (x5 * sqrt(x5));
	const GEN_FLT x7 = 0.101971621297793 * acc_x;
	const GEN_FLT x8 = x6 * x7;
	const GEN_FLT x9 = x0 * x8;
	const GEN_FLT x10 = 1. / sqrt(x5);
	const GEN_FLT x11 = 0.101971621297793 * x10;
	const GEN_FLT x12 = x11 * acc_y;
	const GEN_FLT x13 = 1 + (0.101971621297793 * acc_z);
	const GEN_FLT x14 = x6 * x13;
	const GEN_FLT x15 = obj_qw * obj_qi;
	const GEN_FLT x16 = -1 * x15 * x14;
	const GEN_FLT x17 = x4 * x6;
	const GEN_FLT x18 = 0.101971621297793 * acc_y;
	const GEN_FLT x19 = (-1 * x18 * x17) + x16 + x12 + x9;
	const GEN_FLT x20 = 2 * x10;
	const GEN_FLT x21 = x20 * obj_qk;
	const GEN_FLT x22 = x13 * x10;
	const GEN_FLT x23 = x11 * acc_x;
	const GEN_FLT x24 = (-1 * x23 * obj_qk) + (x22 * obj_qi) + (x12 * obj_qw);
	const GEN_FLT x25 = 2 * x6;
	const GEN_FLT x26 = x24 * x25;
	const GEN_FLT x27 = x6 * x18;
	const GEN_FLT x28 = x27 * x15;
	const GEN_FLT x29 = obj_qw * obj_qj;
	const GEN_FLT x30 = -1 * x8 * x29;
	const GEN_FLT x31 = (-1 * x13 * x17) + x22 + x30 + x28;
	const GEN_FLT x32 = x20 * obj_qj;
	const GEN_FLT x33 = (-1 * x12 * obj_qi) + (x23 * obj_qj) + (x22 * obj_qw);
	const GEN_FLT x34 = x33 * x25;
	const GEN_FLT x35 = obj_qk * obj_qi;
	const GEN_FLT x36 = (-1 * x28) + (-1 * x2 * x14) + x22 + (x8 * x35);
	const GEN_FLT x37 = x35 * x26;
	const GEN_FLT x38 = obj_qj * obj_qi;
	const GEN_FLT x39 = x34 * x38;
	const GEN_FLT x40 = x16 + (-1 * x8 * x38) + (x2 * x27) + (-1 * x12);
	const GEN_FLT x41 = obj_qk * obj_qj;
	const GEN_FLT x42 = x8 * x41;
	const GEN_FLT x43 = x38 * x14;
	const GEN_FLT x44 = (-1 * x29 * x27) + (-1 * x43) + x42;
	const GEN_FLT x45 = x29 * x14;
	const GEN_FLT x46 = x20 * ((-1 * x45) + (-1 * x1 * x8) + (x38 * x27) + x23);
	const GEN_FLT x47 = x33 * x20;
	const GEN_FLT x48 = -1 * x0 * x27;
	const GEN_FLT x49 = x48 + (-1 * x35 * x14) + (x3 * x8) + (-1 * x23);
	const GEN_FLT x50 = x35 * x27;
	const GEN_FLT x51 = x14 * obj_qk;
	const GEN_FLT x52 = (-1 * x51 * obj_qw) + (-1 * x42) + x50;
	const GEN_FLT x53 = x24 * x20;
	const GEN_FLT x54 = 1. / x5;
	const GEN_FLT x55 = 0.203943242595586 * x54;
	const GEN_FLT x56 = -1 * x3 * x55;
	const GEN_FLT x57 = -1 * x1 * x55;
	const GEN_FLT x58 = x0 * x55;
	const GEN_FLT x59 = x55 * x38;
	const GEN_FLT x60 = x55 * x35;
	const GEN_FLT x61 = x55 * x29;
	const GEN_FLT x62 = x20 * obj_qi;
	const GEN_FLT x63 = (-1 * x7 * x17) + x23 + x48 + x45;
	const GEN_FLT x64 = (-1 * x22 * obj_qj) + (x12 * obj_qk) + (x23 * obj_qw);
	const GEN_FLT x65 = x64 * x25;
	const GEN_FLT x66 = (-1 * x8 * x15) + x43 + (-1 * x50);
	const GEN_FLT x67 = x65 * x41;
	const GEN_FLT x68 = (-1 * x22) + x30 + (-1 * x41 * x27) + (x1 * x14);
	const GEN_FLT x69 = (-1 * x9) + (-1 * x3 * x27) + x12 + (x51 * obj_qj);
	const GEN_FLT x70 = x64 * x20;
	const GEN_FLT x71 = 0.101971621297793 + (-1 * x2 * x55);
	const GEN_FLT x72 = x55 * x15;
	const GEN_FLT x73 = x55 * x41;
	const GEN_FLT x74 = x6 * avx;
	const GEN_FLT x75 = x0 * x74;
	const GEN_FLT x76 = x6 * avz;
	const GEN_FLT x77 = -1 * x76 * x15;
	const GEN_FLT x78 = x10 * avy;
	const GEN_FLT x79 = x6 * avy;
	const GEN_FLT x80 = x78 + (-1 * x4 * x79) + x77 + x75;
	const GEN_FLT x81 = x10 * avz;
	const GEN_FLT x82 = x10 * avx;
	const GEN_FLT x83 = (-1 * x82 * obj_qk) + (x81 * obj_qi) + (x78 * obj_qw);
	const GEN_FLT x84 = x83 * x25;
	const GEN_FLT x85 = x79 * x15;
	const GEN_FLT x86 = -1 * x74 * x29;
	const GEN_FLT x87 = (-1 * x4 * x76) + x81 + x86 + x85;
	const GEN_FLT x88 = (-1 * x78 * obj_qi) + (x82 * obj_qj) + (x81 * obj_qw);
	const GEN_FLT x89 = x88 * x25;
	const GEN_FLT x90 = (-1 * x85) + (x74 * x35) + (-1 * x2 * x76) + x81;
	const GEN_FLT x91 = x84 * x35;
	const GEN_FLT x92 = (-1 * x78) + (-1 * x74 * x38) + x77 + (x2 * x79);
	const GEN_FLT x93 = x89 * x38;
	const GEN_FLT x94 = x74 * x41;
	const GEN_FLT x95 = x76 * x38;
	const GEN_FLT x96 = x79 * obj_qj;
	const GEN_FLT x97 = (-1 * x96 * obj_qw) + (-1 * x95) + x94;
	const GEN_FLT x98 = x76 * x29;
	const GEN_FLT x99 = (-1 * x1 * x74) + (-1 * x98) + x82 + (x96 * obj_qi);
	const GEN_FLT x100 = x88 * x20;
	const GEN_FLT x101 = x79 * obj_qk;
	const GEN_FLT x102 = -1 * x101 * obj_qw;
	const GEN_FLT x103 = (-1 * x76 * x35) + x102 + (x3 * x74) + (-1 * x82);
	const GEN_FLT x104 = x83 * x20;
	const GEN_FLT x105 = x101 * obj_qi;
	const GEN_FLT x106 = (-1 * x0 * x76) + (-1 * x94) + x105;
	const GEN_FLT x107 = 2 * x54;
	const GEN_FLT x108 = -1 * x1 * x107;
	const GEN_FLT x109 = 1 + (-1 * x3 * x107);
	const GEN_FLT x110 = x0 * x107;
	const GEN_FLT x111 = x38 * x107;
	const GEN_FLT x112 = x35 * x107;
	const GEN_FLT x113 = x29 * x107;
	const GEN_FLT x114 = (-1 * x17 * avx) + x102 + x82 + x98;
	const GEN_FLT x115 = (-1 * x81 * obj_qj) + (x78 * obj_qk) + (x82 * obj_qw);
	const GEN_FLT x116 = x25 * x115;
	const GEN_FLT x117 = (-1 * x74 * x15) + (-1 * x105) + x95;
	const GEN_FLT x118 = x86 + (x1 * x76) + (-1 * x101 * obj_qj) + (-1 * x81);
	const GEN_FLT x119 = x41 * x116;
	const GEN_FLT x120 = (-1 * x3 * x79) + x78 + (-1 * x75) + (x76 * x41);
	const GEN_FLT x121 = x20 * x115;
	const GEN_FLT x122 = -1 * x2 * x107;
	const GEN_FLT x123 = x15 * x107;
	const GEN_FLT x124 = x41 * x107;
	out[0] = 0;
	out[1] = 0;
	out[2] = 0;
	out[3] = (-1 * x32 * x31) + (x34 * x29) + (-1 * x0 * x26) + (x21 * x19);
	out[4] = (-1 * x40 * x32) + x39 + (-1 * x37) + (x36 * x21);
	out[5] = (-1 * x47) + (x1 * x34) + (-1 * x46 * obj_qj) + (-1 * x41 * x26) + (x44 * x21);
	out[6] = (x41 * x34) + x53 + (-1 * x3 * x26) + (-1 * x52 * x32) + (x49 * x21);
	out[7] = 0;
	out[8] = 0;
	out[9] = 0;
	out[10] = 0;
	out[11] = 0;
	out[12] = 0;
	out[13] = 0.101971621297793 + x57 + x56;
	out[14] = x59 + x58;
	out[15] = (-1 * x61) + x60;
	out[16] = 0;
	out[17] = 0;
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
	out[21] = 0;
	out[22] = (x0 * x65) + (-1 * x34 * x15) + (-1 * x63 * x21) + (x62 * x31);
	out[23] = (-1 * x66 * x21) + (x65 * x35) + x47 + (-1 * x2 * x34) + (x62 * x40);
	out[24] = x67 + (-1 * x39) + (-1 * x68 * x21) + (x46 * obj_qi);
	out[25] = (-1 * x69 * x21) + (-1 * x34 * x35) + (x3 * x65) + (-1 * x70) + (x62 * x52);
	out[26] = 0;
	out[27] = 0;
	out[28] = 0;
	out[29] = 0;
	out[30] = 0;
	out[31] = 0;
	out[32] = (-1 * x58) + x59;
	out[33] = x71 + x56;
	out[34] = x73 + x72;
	out[35] = 0;
	out[36] = 0;
	out[37] = 0;
	out[38] = 0;
	out[39] = 0;
	out[40] = 0;
	out[41] = (x26 * x15) + (-1 * x62 * x19) + (x63 * x32) + (-1 * x65 * x29);
	out[42] = (-1 * x53) + (x2 * x26) + (-1 * x62 * x36) + (x66 * x32) + (-1 * x65 * x38);
	out[43] = (x38 * x26) + (-1 * x62 * x44) + (-1 * x1 * x65) + (x68 * x32) + x70;
	out[44] = (-1 * x62 * x49) + x37 + (x69 * x32) + (-1 * x67);
	out[45] = 0;
	out[46] = 0;
	out[47] = 0;
	out[48] = 0;
	out[49] = 0;
	out[50] = 0;
	out[51] = x60 + x61;
	out[52] = (-1 * x72) + x73;
	out[53] = x71 + x57;
	out[54] = 0;
	out[55] = 0;
	out[56] = 0;
	out[57] = 0;
	out[58] = 0;
	out[59] = 0;
	out[60] = (x89 * x29) + (-1 * x87 * x32) + (-1 * x0 * x84) + (x80 * x21);
	out[61] = x93 + (-1 * x92 * x32) + (-1 * x91) + (x90 * x21);
	out[62] = (-1 * x100) + (x1 * x89) + (-1 * x99 * x32) + (-1 * x84 * x41) + (x97 * x21);
	out[63] = x104 + (-1 * x32 * x106) + (-1 * x3 * x84) + (x89 * x41) + (x21 * x103);
	out[64] = 0;
	out[65] = 0;
	out[66] = 0;
	out[67] = x109 + x108;
	out[68] = x111 + x110;
	out[69] = (-1 * x113) + x112;
	out[70] = 0;
	out[71] = 0;
	out[72] = 0;
	out[73] = 1;
	out[74] = 0;
	out[75] = 0;
	out[76] = 0;
	out[77] = 0;
	out[78] = 0;
	out[79] = (x0 * x116) + (-1 * x21 * x114) + (-1 * x89 * x15) + (x87 * x62);
	out[80] = (-1 * x21 * x117) + x100 + (x35 * x116) + (-1 * x2 * x89) + (x62 * x92);
	out[81] = x119 + (-1 * x21 * x118) + (-1 * x93) + (x62 * x99);
	out[82] = (-1 * x121) + (x3 * x116) + (-1 * x21 * x120) + (-1 * x89 * x35) + (x62 * x106);
	out[83] = 0;
	out[84] = 0;
	out[85] = 0;
	out[86] = (-1 * x110) + x111;
	out[87] = x109 + x122;
	out[88] = x124 + x123;
	out[89] = 0;
	out[90] = 0;
	out[91] = 0;
	out[92] = 0;
	out[93] = 1;
	out[94] = 0;
	out[95] = 0;
	out[96] = 0;
	out[97] = 0;
	out[98] = (-1 * x80 * x62) + (-1 * x29 * x116) + (x84 * x15) + (x32 * x114);
	out[99] = (x2 * x84) + (-1 * x104) + (-1 * x62 * x90) + (-1 * x38 * x116) + (x32 * x117);
	out[100] = (x84 * x38) + (-1 * x62 * x97) + x121 + (-1 * x1 * x116) + (x32 * x118);
	out[101] = x91 + (-1 * x62 * x103) + (-1 * x119) + (x32 * x120);
	out[102] = 0;
	out[103] = 0;
	out[104] = 0;
	out[105] = x112 + x113;
	out[106] = (-1 * x123) + x124;
	out[107] = 1 + x122 + x108;
	out[108] = 0;
	out[109] = 0;
	out[110] = 0;
	out[111] = 0;
	out[112] = 0;
	out[113] = 1;
}

static inline void gen_imu_predict_gyro(FLT* out, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = 1. / sqrt(1e-11 + (obj_qw * obj_qw) + (obj_qk * obj_qk) + (obj_qi * obj_qi) + (obj_qj * obj_qj));
	const GEN_FLT x1 = x0 * avy;
	const GEN_FLT x2 = x0 * avz;
	const GEN_FLT x3 = x0 * avx;
	const GEN_FLT x4 = x0 * ((-1 * x3 * obj_qk) + (x2 * obj_qi) + (x1 * obj_qw));
	const GEN_FLT x5 = x0 * ((-1 * x1 * obj_qi) + (x3 * obj_qj) + (x2 * obj_qw));
	const GEN_FLT x6 = x0 * ((-1 * x2 * obj_qj) + (x1 * obj_qk) + (x3 * obj_qw));
	out[0] = avx + (2 * ((-1 * x5 * obj_qj) + (x4 * obj_qk))) + gbx;
	out[1] = avy + (2 * ((-1 * x6 * obj_qk) + (x5 * obj_qi))) + gby;
	out[2] = avz + (2 * ((-1 * x4 * obj_qi) + (x6 * obj_qj))) + gbz;
}

// Jacobian of imu_predict_gyro wrt [obj_px, obj_py, obj_pz, obj_qw, obj_qi, obj_qj, obj_qk, vx, vy, vz, avx, avy, avz, acc_x, acc_y, acc_z, gbx, gby, gbz]
static inline void gen_imu_predict_gyro_jac_kalman_model(FLT* out, const SurviveKalmanModel* kalman_model) {
	const GEN_FLT obj_px = (*kalman_model).Pose.Pos[0];
	const GEN_FLT obj_py = (*kalman_model).Pose.Pos[1];
	const GEN_FLT obj_pz = (*kalman_model).Pose.Pos[2];
	const GEN_FLT obj_qw = (*kalman_model).Pose.Rot[0];
	const GEN_FLT obj_qi = (*kalman_model).Pose.Rot[1];
	const GEN_FLT obj_qj = (*kalman_model).Pose.Rot[2];
	const GEN_FLT obj_qk = (*kalman_model).Pose.Rot[3];
	const GEN_FLT vx = (*kalman_model).Velocity.Pos[0];
	const GEN_FLT vy = (*kalman_model).Velocity.Pos[1];
	const GEN_FLT vz = (*kalman_model).Velocity.Pos[2];
	const GEN_FLT avx = (*kalman_model).Velocity.AxisAngleRot[0];
	const GEN_FLT avy = (*kalman_model).Velocity.AxisAngleRot[1];
	const GEN_FLT avz = (*kalman_model).Velocity.AxisAngleRot[2];
	const GEN_FLT acc_x = (*kalman_model).Acc[0];
	const GEN_FLT acc_y = (*kalman_model).Acc[1];
	const GEN_FLT acc_z = (*kalman_model).Acc[2];
	const GEN_FLT gbx = (*kalman_model).GyroBias[0];
	const GEN_FLT gby = (*kalman_model).GyroBias[1];
	const GEN_FLT gbz = (*kalman_model).GyroBias[2];
	const GEN_FLT x0 = obj_qj * obj_qj;
	const GEN_FLT x1 = obj_qi * obj_qi;
	const GEN_FLT x2 = obj_qk * obj_qk;
	const GEN_FLT x3 = obj_qw * obj_qw;
	const GEN_FLT x4 = 1e-11 + x3 + x2 + x1 + x0;
	const GEN_FLT x5 = 1. / (x4 * sqrt(x4));
	const GEN_FLT x6 = x5 * avx;
	const GEN_FLT x7 = obj_qw * obj_qk;
	const GEN_FLT x8 = x6 * x7;
	const GEN_FLT x9 = x5 * avz;
	const GEN_FLT x10 = x9 * obj_qi;
	const GEN_FLT x11 = -1 * x10 * obj_qw;
	const GEN_FLT x12 = 1. / sqrt(x4);
	const GEN_FLT x13 = x12 * avy;
	const GEN_FLT x14 = x5 * avy;
	const GEN_FLT x15 = x13 + (-1 * x3 * x14) + x11 + x8;
	const GEN_FLT x16 = 2 * x12;
	const GEN_FLT x17 = x16 * obj_qk;
	const GEN_FLT x18 = x12 * avz;
	const GEN_FLT x19 = x12 * avx;
	const GEN_FLT x20 = (-1 * x19 * obj_qk) + (x18 * obj_qi) + (x13 * obj_qw);
	const GEN_FLT x21 = 2 * x20;
	const GEN_FLT x22 = x5 * x21;
	const GEN_FLT x23 = x14 * obj_qi;
	const GEN_FLT x24 = x23 * obj_qw;
	const GEN_FLT x25 = obj_qw * obj_qj;
	const GEN_FLT x26 = -1 * x6 * x25;
	const GEN_FLT x27 = x16 * ((-1 * x3 * x9) + x26 + x18 + x24);
	const GEN_FLT x28 = (-1 * x13 * obj_qi) + (x19 * obj_qj) + (x18 * obj_qw);
	const GEN_FLT x29 = 2 * x28;
	const GEN_FLT x30 = x5 * x29;
	const GEN_FLT x31 = obj_qk * obj_qi;
	const GEN_FLT x32 = x16 * ((x6 * x31) + (-1 * x1 * x9) + (-1 * x24) + x18);
	const GEN_FLT x33 = x31 * x22;
	const GEN_FLT x34 = x6 * obj_qi;
	const GEN_FLT x35 = x11 + (-1 * x13) + (-1 * x34 * obj_qj) + (x1 * x14);
	const GEN_FLT x36 = x16 * obj_qj;
	const GEN_FLT x37 = obj_qj * obj_qi;
	const GEN_FLT x38 = x30 * x37;
	const GEN_FLT x39 = obj_qk * obj_qj;
	const GEN_FLT x40 = x6 * x39;
	const GEN_FLT x41 = x10 * obj_qj;
	const GEN_FLT x42 = (-1 * x41) + (-1 * x25 * x14) + x40;
	const GEN_FLT x43 = x0 * x5;
	const GEN_FLT x44 = x9 * x25;
	const GEN_FLT x45 = x16 * ((-1 * x44) + (-1 * x43 * avx) + x19 + (x23 * obj_qj));
	const GEN_FLT x46 = x28 * x16;
	const GEN_FLT x47 = -1 * x7 * x14;
	const GEN_FLT x48 = x16 * (x47 + (-1 * x9 * x31) + (x2 * x6) + (-1 * x19));
	const GEN_FLT x49 = x2 * x5;
	const GEN_FLT x50 = x20 * x16;
	const GEN_FLT x51 = x23 * obj_qk;
	const GEN_FLT x52 = x16 * ((-1 * x7 * x9) + (-1 * x40) + x51);
	const GEN_FLT x53 = 2 * (1. / x4);
	const GEN_FLT x54 = -1 * x2 * x53;
	const GEN_FLT x55 = -1 * x0 * x53;
	const GEN_FLT x56 = x7 * x53;
	const GEN_FLT x57 = x53 * obj_qi;
	const GEN_FLT x58 = x57 * obj_qj;
	const GEN_FLT x59 = x57 * obj_qk;
	const GEN_FLT x60 = x53 * x25;
	const GEN_FLT x61 = obj_qw * obj_qi;
	const GEN_FLT x62 = x16 * ((-1 * x3 * x6) + x19 + x47 + x44);
	const GEN_FLT x63 = (x13 * obj_qk) + (-1 * x18 * obj_qj) + (x19 * obj_qw);
	const GEN_FLT x64 = 2 * x63;
	const GEN_FLT x65 = x5 * x64;
	const GEN_FLT x66 = x16 * obj_qi;
	const GEN_FLT x67 = x1 * x5;
	const GEN_FLT x68 = (-1 * x51) + (-1 * x34 * obj_qw) + x41;
	const GEN_FLT x69 = (x26 + (x43 * avz) + (-1 * x39 * x14) + (-1 * x18)) * x16;
	const GEN_FLT x70 = x65 * x39;
	const GEN_FLT x71 = (-1 * x8) + (-1 * x2 * x14) + x13 + (x9 * x39);
	const GEN_FLT x72 = x63 * x16;
	const GEN_FLT x73 = 1 + (-1 * x1 * x53);
	const GEN_FLT x74 = x57 * obj_qw;
	const GEN_FLT x75 = x53 * x39;
	const GEN_FLT x76 = x5 * x37;
	out[0] = 0;
	out[1] = 0;
	out[2] = 0;
	out[3] = (x30 * x25) + (-1 * x27 * obj_qj) + (-1 * x7 * x22) + (x15 * x17);
	out[4] = x38 + (-1 * x36 * x35) + (-1 * x33) + (x32 * obj_qk);
	out[5] = (-1 * x46) + (x43 * x29) + (-1 * x45 * obj_qj) + (-1 * x39 * x22) + (x42 * x17);
	out[6] = (x30 * x39) + x50 + (-1 * x49 * x21) + (-1 * x52 * obj_qj) + (x48 * obj_qk);
	out[7] = 0;
	out[8] = 0;
	out[9] = 0;
	out[10] = 1 + x55 + x54;
	out[11] = x58 + x56;
	out[12] = (-1 * x60) + x59;
	out[13] = 0;
	out[14] = 0;
	out[15] = 0;
	out[16] = 1;
	out[17] = 0;
	out[18] = 0;
	out[19] = 0;
	out[20] = 0;
	out[21] = 0;
	out[22] = (x7 * x65) + (-1 * x62 * obj_qk) + (-1 * x61 * x30) + (x27 * obj_qi);
	out[23] = (-1 * x68 * x17) + (x65 * x31) + x46 + (-1 * x67 * x29) + (x66 * x35);
	out[24] = x70 + (-1 * x38) + (-1 * x69 * obj_qk) + (x45 * obj_qi);
	out[25] = (x64 * x49) + (-1 * x71 * x17) + (-1 * x72) + (-1 * x30 * x31) + (x52 * obj_qi);
	out[26] = 0;
	out[27] = 0;
	out[28] = 0;
	out[29] = (-1 * x56) + x58;
	out[30] = x73 + x54;
	out[31] = x75 + x74;
	out[32] = 0;
	out[33] = 0;
	out[34] = 0;
	out[35] = 0;
	out[36] = 1;
	out[37] = 0;
	out[38] = 0;
	out[39] = 0;
	out[40] = 0;
	out[41] = (-1 * x65 * x25) + (-1 * x66 * x15) + (x61 * x22) + (x62 * obj_qj);
	out[42] = (-1 * x50) + (-1 * x76 * x64) + (-1 * x32 * obj_qi) + (x67 * x21) + (x68 * x36);
	out[43] = (x76 * x21) + (-1 * x66 * x42) + (-1 * x64 * x43) + x72 + (x69 * obj_qj);
	out[44] = x33 + (-1 * x48 * obj_qi) + (-1 * x70) + (x71 * x36);
	out[45] = 0;
	out[46] = 0;
	out[47] = 0;
	out[48] = x59 + x60;
	out[49] = (-1 * x74) + x75;
	out[50] = x73 + x55;
	out[51] = 0;
	out[52] = 0;
	out[53] = 0;
	out[54] = 0;
	out[55] = 0;
	out[56] = 1;
}

